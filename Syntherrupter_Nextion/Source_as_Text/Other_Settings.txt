Page Other_Settings
    Attributes
        ID               : 0
        Scope            : local
        Send Component ID: disabled
        Locked           : no
    
    Events
        Preinitialize Event
            // Prevent page refreshs until postinit
            ref_stop
            //
            // Load colors
            click fLoadColors,1
            click fLoadModes,1
            //
            // Display username
            if(User_Settings.userNum.val==0)
            {
                tUser.txt=" "+User_Settings.u0Name.txt
            }else if(User_Settings.userNum.val==1)
            {
                tUser.txt=" "+User_Settings.u1Name.txt
            }else if(User_Settings.userNum.val==2)
            {
                tUser.txt=" "+User_Settings.u2Name.txt
            }
            //
            vis fLoadModes,0
            vis fLoadColors,0
            vis idle,0
            vis fCheckNApply,0
            vis fSqrt,0
            vis fSysex,0
            //
            // Properly hide the help stuff.
            vis hHelp,0
            vis tHelp,0
            //
            newValTargetId.val=idle.id
            // Set dark mode button state
            btDark.val=Settings.colorMode.val
            //
            // Load settings from global variables.
            fSqrt.val=dim*sBrightness.maxval
            click fSqrt,1
            sBrightness.val=fSqrt.val
            sys0=thsp
            nSleepMin.val=sys0/60
            sys1=nSleepMin.val*60
            sys0-=sys1
            nSleepS.val=sys0
            //
            // Enable page refreshs again
            ref_star
        
        Touch Press Event
            if(Other_Settings.nBackOff.val!=0)
            {
                // Default "stop" action.
                // Set ontime and duty to 0 for all modes. See fSysex for details
                // Disable all modes as well.
                printh f0 00 26 06 01 7f 20 00 00 7f 00 00 00 00 00 f7
                printh f0 00 26 05 01 7f 21 00 00 7f 00 00 00 00 00 f7
                printh f0 00 26 05 01 7f 22 00 00 7f 00 00 00 00 00 f7
                // Set all ontime and duty settings of all pages to 0.
                // First come the global variables then the local variables.
                Simple.ontime.val=0
                Simple.duty.val=0
                Simple.set1.val=Simple.set1.val&0x0000ffff
                Simple.set2.val=Simple.set2.val&0x0000ffff
                Simple.set3.val=Simple.set3.val&0x0000ffff
                Simple.set4.val=Simple.set4.val&0x0000ffff
                Simple.set5.val=Simple.set5.val&0x0000ffff
                Simple.set6.val=Simple.set6.val&0x0000ffff
                MIDI_Live.ontime.val=0
                MIDI_Live.duty.val=0
                MIDI_Live.set1.val=0
                MIDI_Live.set2.val=0
                MIDI_Live.set3.val=0
                MIDI_Live.set4.val=0
                MIDI_Live.set5.val=0
                MIDI_Live.set6.val=0
                Lightsaber.ontime.val=0
                Lightsaber.ontimes12.val=0
                Lightsaber.ontimes34.val=0
                Lightsaber.ontimes56.val=0
            }
        
Variable (int32) newValTargetId
    Attributes
        ID   : 7
        Scope: local
        Value: 20
    
Variable (int32) newSelect
    Attributes
        ID   : 8
        Scope: local
        Value: 0
    
Variable (int32) currentHelp
    Attributes
        ID   : 42
        Scope: local
        Value: 4294967295
    
Number nHoldTime
    Attributes
        ID                 : 6
        Scope              : global
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 250
    
    Events
        Touch Press Event
            // Check if values are legal and if so, apply them
            click fCheckNApply,0
            // Reset push state of last selected value
            b[newValTargetId.val].bco=idle.bco
            b[newValTargetId.val].pco=idle.pco
            // Mark this field as pushed
            nHoldTime.bco=idle.pco
            nHoldTime.pco=idle.bco
            newValTargetId.val=nHoldTime.id
            // A new value has been selected
            newSelect.val=1
        
Number nSleepMin
    Attributes
        ID                 : 26
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 5
    
    Events
        Touch Press Event
            // Check if values are legal and if so, apply them
            click fCheckNApply,0
            // Reset push state of last selected value
            b[newValTargetId.val].bco=idle.bco
            b[newValTargetId.val].pco=idle.pco
            // Mark this field as pushed
            nSleepMin.bco=idle.pco
            nSleepMin.pco=idle.bco
            newValTargetId.val=nSleepMin.id
            // A new value has been selected
            newSelect.val=1
        
Number nSleepS
    Attributes
        ID                 : 27
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 30
    
    Events
        Touch Press Event
            // Check if values are legal and if so, apply them
            click fCheckNApply,0
            // Reset push state of last selected value
            b[newValTargetId.val].bco=idle.bco
            b[newValTargetId.val].pco=idle.pco
            // Mark this field as pushed
            nSleepS.bco=idle.pco
            nSleepS.pco=idle.bco
            newValTargetId.val=nSleepS.id
            // A new value has been selected
            newSelect.val=1
        
Number fSqrt
    Attributes
        ID                 : 31
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // fXxxx are functions. Since they need to be clicked to execute their code they need to be on the same page. Usage:
            // 1. set the component value (fXxx.val) to the input value
            // 2. Execute code with "click fXxxx,1".
            // 3. Read the result from the component value (fXxx.val)
            // This functions calculates the square root.
            if(fSqrt.val>=2)
            {
                sys0=10
                sys2=fSqrt.val+1
                while(sys2>fSqrt.val)
                {
                    sys1=fSqrt.val/sys0
                    sys0+=sys1
                    sys0/=2
                    sys2=sys0*sys0
                }
                fSqrt.val=sys0
            }
        
Number nBackOff
    Attributes
        ID                 : 33
        Scope              : global
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 1
    
    Events
        Touch Press Event
            // Check if values are legal and if so, apply them
            click fCheckNApply,0
            // Reset push state of last selected value
            b[newValTargetId.val].bco=idle.bco
            b[newValTargetId.val].pco=idle.pco
            // Mark this field as pushed
            nBackOff.bco=idle.pco
            nBackOff.pco=idle.bco
            newValTargetId.val=nBackOff.id
            // A new value has been selected
            newSelect.val=1
        
XFloat idle
    Attributes
        ID                 : 9
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
Text tHelp
    Attributes
        ID                 : 1
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : 
        Max. Text Size     : 900
    
    Events
        Touch Press Event
            // This object is only visible in help mode. No need to be "transparent" to clicks in normal operation.
            click bReturn,0
        
Text tHideBack
    Attributes
        ID                 : 2
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // This is just to hide the background around the sliders so that you do not turn the outputs off by accident.
        
Text tTitle
    Attributes
        ID                 : 3
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : General Settings
        Max. Text Size     : 22
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHoldTime
    Attributes
        ID                 : 5
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Button hold Time:
        Max. Text Size     : 30
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tBrightness
    Attributes
        ID                 : 22
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Display brightness:
        Max. Text Size     : 30
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text fCheckNApply
    Attributes
        ID                 : 24
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 10
    
    Events
        Touch Release Event
            // Settings must stay in certain ranges. this function checks and fixes them.Afterwards settings are applied
            if(nBackOff.val!=0)
            {
                nBackOff.val=1
            }
            if(nHoldTime.val<50)
            {
                // Hold time must at least be 50ms. This is the lower limit of the nextion timer object
                nHoldTime.val=50
            }else if(nHoldTime.val>9999)
            {
                // Who would want to push a button 10s or more??
                nHoldTime.val=9999
            }
            if(nSleepMin.val>60)
            {
                nSleepMin.val=60
            }
            if(nSleepS.val>59)
            {
                nSleepS.val=59
            }
            thsp=nSleepMin.val*60+nSleepS.val
            click fSysex,1
        
Text tSleep
    Attributes
        ID                 : 25
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Enter sleep after:
        Max. Text Size     : 30
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMin
    Attributes
        ID                 : 28
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : min
        Max. Text Size     : 3
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tS
    Attributes
        ID                 : 29
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : s
        Max. Text Size     : 3
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tms
    Attributes
        ID                 : 30
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : ms
        Max. Text Size     : 2
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tBackOff
    Attributes
        ID                 : 32
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Background shutdown:
        Max. Text Size     : 30
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tUser
    Attributes
        ID                 : 34
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  Guest
        Max. Text Size     : 32
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMSI
    Attributes
        ID                 : 35
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Simple
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMML
    Attributes
        ID                 : 36
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Live
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMLS
    Attributes
        ID                 : 37
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Lightsaber
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tSelToMod
    Attributes
        ID                 : 39
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Select any value to modify.
        Max. Text Size     : 30
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Slider sBrightness
    Attributes
        ID               : 23
        Scope            : local
        Send Component ID: disabled
        Position         : 100
        Upper range limit: 100
        Lower range limit: 10
    
    Events
        Touch Press Event
            // Check if values are legal and if so, apply them
            click fCheckNApply,0
            // Reset push state of last selected value
            b[newValTargetId.val].bco=idle.bco
            b[newValTargetId.val].pco=idle.pco
            // No value selected to modify
            newValTargetId.val=idle.id
            // A new value has been selected
            newSelect.val=0
        
        Touch Release Event
            sys0=sBrightness.val*sBrightness.val
            sys0/=sBrightness.maxval
            dim=sys0
        
Button bReturn
    Attributes
        ID               : 4
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : â†
        Max. Text Size   : 10
    
    Events
        Touch Press Event
            click bOK,0
        
        Touch Release Event
            page Settings
        
Button b0
    Attributes
        ID               : 10
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 0
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
        
Button b1
    Attributes
        ID               : 11
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 1
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=1
        
Button b2
    Attributes
        ID               : 12
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 2
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=2
        
Button b3
    Attributes
        ID               : 13
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 3
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=3
        
Button b4
    Attributes
        ID               : 14
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 4
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=4
        
Button b5
    Attributes
        ID               : 15
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 5
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=5
        
Button b6
    Attributes
        ID               : 16
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 6
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=6
        
Button b7
    Attributes
        ID               : 17
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 7
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=7
        
Button b8
    Attributes
        ID               : 18
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 8
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=8
        
Button b9
    Attributes
        ID               : 19
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 9
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(newSelect.val!=0)
            {
                newSelect.val=0
                b[newValTargetId.val].val=0
            }else
            {
                b[newValTargetId.val].val*=10
            }
            b[newValTargetId.val].val+=9
        
Button bClear
    Attributes
        ID               : 20
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : X
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            b[newValTargetId.val].val=0
        
Button bOK
    Attributes
        ID               : 21
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : ok
        Max. Text Size   : 2
    
    Events
        Touch Release Event
            b[newValTargetId.val].bco=idle.bco
            b[newValTargetId.val].pco=idle.pco
            newValTargetId.val=idle.id
            click fCheckNApply,0
        
Dual-state Button btDark
    Attributes
        ID               : 38
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Dark Mode
        Max. Text Size   : 20
    
    Events
        Touch Release Event
            // REMEMBER TO CHANGE Startup.comOK!
            if(Settings.colorMode.val==0)
            {
                Settings.colorMode.val=1
                Settings.backCol.val=8484
                Settings.backCol2.val=2145
                Settings.backSelectCol2.val=16904
                Settings.frontCol.val=40476
                Settings.frontCol2.val=40476
                Settings.qrFrontCol.val=40476
            }else
            {
                Settings.colorMode.val=0
                Settings.backCol.val=65535
                Settings.backCol2.val=4589
                Settings.backSelectCol2.val=6900
                Settings.frontCol.val=6900
                Settings.frontCol2.val=65535
                Settings.qrFrontCol.val=6900
            }
            page dp
        
Dual-state Button btHelp
    Attributes
        ID               : 43
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : ?
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(btHelp.val==0)
            {
                // In case something was displayed, get rid of it
                bReturn.val=1
                click hHelp,0
                // disable help overlay
                vis hHelp,0
            }else
            {
                vis hHelp,1
            }
        
Hotspot fLoadModes
    Attributes
        ID               : 40
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Load active modes
            sys0=Settings.activeModes.val&4
            if(sys0!=0)
            {
                // Lightsaber Mode is active
                tMLS.bco=Settings.backSelectCol2.val
            }
            //
            // Display all active modes
            sys0=Settings.activeModes.val&1
            if(sys0!=0)
            {
                // Simple Mode is active
                tMSI.bco=Settings.backSelectCol2.val
            }
            sys0=Settings.activeModes.val&2
            if(sys0!=0)
            {
                // MIDI Live Mode is active
                tMML.bco=Settings.backSelectCol2.val
            }
        
Hotspot fSysex
    Attributes
        ID               : 41
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Sends a Syntherrupter Sysex command that updates Syntherrupter with whatever
            // has been changed on this page.
            // Package format:
            // F0 00 DMID DMID VERSION DEVICE PN_LSB PN_MSB TG_LSB TG_MSB VAL_LSB VAL VAL VAL VAL_MSB F7
            // DMID DMID = 26 05
            // VERSION = 01
            // DEVICE = 7f (wildcard)
            // PN, TG, VAL: see syntherrupter sysex documentation
            //
            //
            // Display Brightness
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 20 02 // Display Brightness
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 00 // Reserved
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // Brightness: 0-100
            prints dim,1
            // Brightness uses less than 7 bits, hardcode remaining bytes.
            printh 00 00 00 00
            // SYSEX_END
            printh f7
            //
            // Standby
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 21 02 // Standby
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 00 // Reserved
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // Seconds til standby, 1-3600
            sys0=thsp
            sys2=sys0
            sys2&=0x7f
            prints sys2,1
            sys0>>=7
            sys2=sys0
            sys2&=0x7f
            prints sys2,1
            // Standby uses less than 14 bits, hardcode remaining bytes.
            printh 00 00 00
            // SYSEX_END
            printh f7
            //
            // Button Hold Time
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 22 02 // Button Hold Time
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 00 // Reserved
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // Time in ms, 50-9999
            sys0=nHoldTime.val
            sys2=sys0
            sys2&=0x7f
            prints sys2,1
            sys0>>=7
            sys2=sys0
            sys2&=0x7f
            prints sys2,1
            // Standby uses less than 14 bits, hardcode remaining bytes.
            printh 00 00 00
            // SYSEX_END
            printh f7
            //
            // Background Shutdown
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 23 02 // Background Shutdown
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 00 // Reserved
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // Bitfield. Bit 0: enable/disable background shutdown
            prints nBackOff.val,1
            // Bitfield uses less than 7 bits, hardcode remaining bytes.
            printh 00 00 00 00
            // SYSEX_END
            printh f7
            //
            // Dark Mode
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 24 02 // Background Shutdown
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 00 // Reserved
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // 0: light mode, 1: dark mode
            prints btDark.val,1
            // Value uses less than 7 bits, hardcode remaining bytes.
            printh 00 00 00 00
            // SYSEX_END
            printh f7
        
Hotspot fLoadColors
    Attributes
        ID               : 44
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Changes all page components according to the current color set.
            // Note: This component has to be the last component of the page.
            //
            // sys0: component id
            // sys1: component type
            // sys2: picture id offset for current color mode
            sys2=Settings.colorMode.val*Settings.picCount.val
            for(sys0=0;sys0<fLoadColors.id;sys0++)
            {
                // More convenient for typing
                sys1=b[sys0].type
                if(sys1==121)
                {
                    // Types that have bco
                    // page
                    if(b[sys0].bco==Settings.backCol2Deflt.val)
                    {
                        b[sys0].bco=Settings.backCol2.val
                    }else
                    {
                        b[sys0].bco=Settings.backCol.val
                    }
                }else if(sys1==54||sys1==59||sys1==116||sys1==55)
                {
                    // Types that have bco, pco, and sta:
                    // number, float, text, scroll text
                    if(b[sys0].sta==1)
                    {
                        if(b[sys0].bco==Settings.backCol2Deflt.val)
                        {
                            b[sys0].bco=Settings.backCol2.val
                            b[sys0].pco=Settings.frontCol2.val
                        }else
                        {
                            b[sys0].bco=Settings.backCol.val
                            b[sys0].pco=Settings.frontCol.val
                        }
                    }
                }else if(sys1==98||sys1==53)
                {
                    // Types that have pco, pic, pco2, pic2, sta:
                    // button, dual-state button
                    if(b[sys0].sta==2)
                    {
                        b[sys0].pco=Settings.frontCol.val
                        b[sys0].pco2=Settings.backCol.val
                        b[sys0].pic=b[sys0].pic%Settings.picCount.val
                        b[sys0].pic+=sys2
                        b[sys0].pic2=b[sys0].pic+1
                    }
                }else if(sys1==58)
                {
                    // Types that have bco, pco
                    // QR Code
                    b[sys0].bco=Settings.backCol.val
                    b[sys0].pco=Settings.qrFrontCol.val
                }else if(sys1==1)
                {
                    // Types that have pic, pic1, pic2:
                    // slider
                    b[sys0].pic=b[sys0].pic%Settings.picCount.val
                    b[sys0].pic+=sys2
                    b[sys0].pic1=b[sys0].pic
                    b[sys0].pic2=b[sys0].pic2%Settings.picCount.val
                    b[sys0].pic2+=sys2
                }
            }
        
Hotspot hHelp
    Attributes
        ID               : 45
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Determine component/feature that would have been touched.
            sys1=0
            for(sys0=fLoadColors.id;sys0>=0;sys0--)
            {
                // Ignore hotspots, touchcaps, variables
                if(b[sys0].type!=5&&b[sys0].type!=51&&b[sys0].type!=52&&b[sys0].type!=109)
                {
                    x0=b[sys0].x
                    y0=b[sys0].y
                    x1=b[sys0].w
                    y1=b[sys0].h
                    x1+=x0
                    y1+=y0
                    if(tch0>=x0&&tch0<x1&&tch1>=y0&&tch1<y1)
                    {
                        sys1=sys0
                        // abort loop
                        sys0=-1
                    }
                }
            }
            if(currentHelp.val>=0&&sys1==bReturn.id)
            {
                // Return button has been pressed while help is being displayed. This means
                // hide the help text again (see touch release event)
                bReturn.val=1
            }else if(sys1==btHelp.id)
            {
                // Question mark button has been pressed. Disable help mode (see touch release event).
                btHelp.val=0
            }else if(currentHelp.val>=0)
            {
                // Help is being displayed and something else has been pressed.
                // Act as if the page background had been pressed.
                // Note: this can make other UI elements to "pop up", therefore bring the text back on top
                // TODO: Prevent flickering!
                click 0,1
                doevents
                ref tHelp
            }else
            {
                // Show help according to what has been touched.
                // Assume that some new help will be displayed
                sys0=1
                tHelp.txt=""
                if(Settings.firstHelp.val!=0)
                {
                    Settings.firstHelp.val=0
                    tHelp.txt+="Help Mode Enabled \r\r"
                    tHelp.txt+="You've enabled the on-screen help by pressing the question mark at the top right \r"
                    tHelp.txt+="corner. As long as it's active, you can press any part of the UI and get a description \r"
                    tHelp.txt+="of what that button/slider/... does. \r"
                    tHelp.txt+="Press the X button at the top left to get help on another part of the UI. \r"
                    tHelp.txt+="Press the question mark at the top right to leave help mode and resume normal\r"
                    tHelp.txt+="operation. \r"
                    tHelp.txt+="Press any other part of the screen, including this description, to disable all outputs. \r"
                    tHelp.txt+="For more information, check the help on the page background.\r"
                    tHelp.txt+=" \r"
                    tHelp.txt+="This tip won't reappear until you reset or power cycle Syntherrupter. \r"
                }else if(sys1==tTitle.id)
                {
                    tHelp.txt+="General Settings \r\r"
                    tHelp.txt+="It's called 'general', but this page actually contains all the settings related to the UI. \r"
                }else if(sys1==tUser.id)
                {
                    tHelp.txt+="Current User \r\r"
                    tHelp.txt+="The name of the currently active user. This determines the range within which you \r"
                    tHelp.txt+="can operate Syntherrupter. Go to the main menu to change the current user. \r"
                }else if(sys1==tMSI.id||sys1==tMML.id||sys1==tMLS.id)
                {
                    tHelp.txt+="Active Modes \r\r"
                    tHelp.txt+="Modes can stay active even if you leave the corresponding page. Active modes are \r"
                    tHelp.txt+="highlighted at the bottom right.  \r"
                }else if(sys1==0||sys1==tHelp.id)
                {
                    tHelp.txt+="Page background \r\r"
                    tHelp.txt+="The page background, textboxes and non-interactive elements in general shut down \r"
                    tHelp.txt+="all outputs if you press them. This allows you to quickly stop all outputs and all \r"
                    tHelp.txt+="modes if something goes wrong. \r"
                    tHelp.txt+="Note however, that unplugging is the only actually safe way to ensure a complete \r"
                    tHelp.txt+="shutdown! \r"
                    tHelp.txt+="This feature can be temporarily disabled in the general settings. After a reset or \r"
                    tHelp.txt+="power-cycle it will be enabled again.\r"
                }else if(sys1==bReturn.id)
                {
                    tHelp.txt+="Return Button\r\r"
                    tHelp.txt+="Return to the settings menu. \r"
                    tHelp.txt+="\r"
                    tHelp.txt+="If you want to leave help mode, press the question mark at the top left. \r"
                }else if(sys1==tHoldTime.id||sys1==nHoldTime.id||sys1==tms.id)
                {
                    tHelp.txt+="Button Hold Time\r\r"
                    tHelp.txt+="Some buttons have a dual outline. These buttons perform alternate functions if you \r"
                    tHelp.txt+="keep them pressed for the time you specify here. \r"
                    tHelp.txt+=" \r"
                    tHelp.txt+="Value range: 50ms - 10s\r"
                }else if(sys1==tBrightness.id||sys1==sBrightness.id)
                {
                    tHelp.txt+="Display Brightness \r\r"
                    tHelp.txt+="Regulates the backlight. If you experience instabilities for values other than 100%, you \r"
                    tHelp.txt+="may have power issues. More information can be found in the online documentation about\r"
                    tHelp.txt+="wiring up your Nextion screen. \r"
                    tHelp.txt+=" \r"
                    tHelp.txt+=" Value range: 0% - 100%\r"
                }else if(sys1==tSleep.id||sys1==nSleepMin.id||sys1==tMin.id||sys1==nSleepS.id||sys1==tS.id)
                {
                    tHelp.txt+="UI Sleep Time\r\r"
                    tHelp.txt+="Time til the screen turns itself off. Syntherrupter will continue to respond to serial commands \r"
                    tHelp.txt+="and continue to operate. It's just the screen that turns off. \r"
                    tHelp.txt+=" \r"
                    tHelp.txt+="Value range: 0s (disabled) - 60min \r"
                }else if(sys1==tBackOff.id||sys1==nBackOff.id)
                {
                    tHelp.txt+="Background Safety Shutdown\r\r"
                    tHelp.txt+="By default, touching any non-interactive part of the UI disables all outputs. The idea is, \r"
                    tHelp.txt+="that shall be able to stop your tesla coils at any moment, no matter which page you're  \r"
                    tHelp.txt+="viewing and without hitting any specific button. \r"
                    tHelp.txt+="However, if you don't want this feature, you can turn it off here. This setting is not persistent \r"
                    tHelp.txt+="though. It will be enabled after every reset or power cycle. \r"
                }else if(sys1==btDark.id)
                {
                    tHelp.txt+="Light Mode / Dark Mode\r\r"
                    tHelp.txt+="Switch between a light and a dark theme for the UI. \r"
                }else if(sys1==b1.id||sys1==b2.id||sys1==b3.id||sys1==b4.id||sys1==b5.id||sys1==b6.id||sys1==b7.id||sys1==b8.id||sys1==b9.id||sys1==b0.id||sys1==bClear.id||sys1==bOK.id)
                {
                    tHelp.txt+="Numpad\r\r"
                    tHelp.txt+="Use this numpad to modify any value fields on the page.\r"
                    tHelp.txt+="X clears the value. \r"
                    tHelp.txt+="ok applies it. If you select another value to edit, it's applied automatically. \r"
                }else
                {
                    // Nope, no new help text to be displayed
                    sys0=0
                }
                if(sys0!=0)
                {
                    currentHelp.val=sys1
                    vis tHelp,1
                    bReturn.txt="âœ•"
                }
            }
        
        Touch Release Event
            // Check if help text is being displayed and shall be hidden again
            if(bReturn.val==1)
            {
                bReturn.val=0
                bReturn.txt="â†"
                vis tHelp,0
                currentHelp.val=-1
            }else if(sys1==btHelp.id)
            {
                click btHelp,0
            }
        
