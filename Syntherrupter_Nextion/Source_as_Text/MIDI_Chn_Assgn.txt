Page MIDI_Chn_Assgn
    Attributes
        ID               : 0
        Scope            : local
        Send Component ID: disabled
        Locked           : no
    
    Events
        Preinitialize Event
            // Prevent page refreshs until postinit
            ref_stop
            //
            // Load colors
            click fLoadColors,1
            click fLoadModes,1
            //
            // Display username
            if(User_Settings.userNum.val==0)
            {
                tUser.txt=" "+User_Settings.u0Name.txt
            }else if(User_Settings.userNum.val==1)
            {
                tUser.txt=" "+User_Settings.u1Name.txt
            }else if(User_Settings.userNum.val==2)
            {
                tUser.txt=" "+User_Settings.u2Name.txt
            }
            //
            // Adjust to number of available outputs
            if(TC_Settings.maxCoilCount.val<6)
            {
                vis btCoil6,0
                if(TC_Settings.maxCoilCount.val<5)
                {
                    vis btCoil5,0
                    if(TC_Settings.maxCoilCount.val<4)
                    {
                        vis btCoil4,0
                        if(TC_Settings.maxCoilCount.val<3)
                        {
                            vis btCoil3,0
                            if(TC_Settings.maxCoilCount.val<2)
                            {
                                vis btCoil2,0
                                vis btCoil1,0
                                vis tCoils,0
                                vis bAllCoils,0
                                vis bNoneCoils,0
                                vis btShow,0
                                tCoils2.txt="Coil 1:"
                                tOverInfo.txt="Filled circles mark which\rchannels are unmuted. "
                                // Ensure that the only available coil is actually selected.
                                btCoil1.val=1
                            }
                        }
                    }
                }
            }
            covx TC_Settings.maxCoilCount.val,tempStr.txt,0,0
            tCoils2.txt+=tempStr.txt
            //
            // functions shall not be visible
            vis fConvBtnState,0
            vis fStore,0
            vis fLoadModes,0
            vis fLoadColors,0
            vis fResetBtns,0
            vis fShow,0
            vis fDraw,0
            //
            // Properly hide the help stuff.
            vis hHelp,0
            vis tHelp,0
            //
            // Enable page refreshs again
            ref_star
        
        Postinitialize Event
            //
            // Load button hold times
            tmButtonHold.tim=Other_Settings.nHoldTime.val
            //
            // On startup all channels are assigned to all coils. To make this more obvious
            // all buttons are highlighted in that case.
            sys0=0xffff
            //
            // Draw lines
            click fDraw,1
        
        Touch Press Event
            if(Other_Settings.nBackOff.val!=0)
            {
                // Default "stop" action.
                // Set ontime and duty to 0 for all modes. See fSysex for details
                // Disable all modes as well.
                printh f0 00 26 06 01 7f 20 00 00 7f 00 00 00 00 00 f7
                printh f0 00 26 05 01 7f 21 00 00 7f 00 00 00 00 00 f7
                printh f0 00 26 05 01 7f 22 00 00 7f 00 00 00 00 00 f7
                // Set all ontime and duty settings of all pages to 0.
                // First come the global variables then the local variables.
                Simple.ontime.val=0
                Simple.duty.val=0
                Simple.set1.val=Simple.set1.val&0x0000ffff
                Simple.set2.val=Simple.set2.val&0x0000ffff
                Simple.set3.val=Simple.set3.val&0x0000ffff
                Simple.set4.val=Simple.set4.val&0x0000ffff
                Simple.set5.val=Simple.set5.val&0x0000ffff
                Simple.set6.val=Simple.set6.val&0x0000ffff
                MIDI_Live.ontime.val=0
                MIDI_Live.duty.val=0
                MIDI_Live.set1.val=0
                MIDI_Live.set2.val=0
                MIDI_Live.set3.val=0
                MIDI_Live.set4.val=0
                MIDI_Live.set5.val=0
                MIDI_Live.set6.val=0
                Lightsaber.ontime.val=0
                Lightsaber.ontimes12.val=0
                Lightsaber.ontimes34.val=0
                Lightsaber.ontimes56.val=0
            }
        
Variable (int32) currentHelp
    Attributes
        ID   : 5
        Scope: local
        Value: 4294967295
    
Variable (string) sTitleStart
    Attributes
        ID            : 10
        Scope         : local
        Text          : MIDI Channel Assignment
        Max. Text Size: 30
    
Variable (int32) showHelp
    Attributes
        ID   : 16
        Scope: local
        Value: 0
    
Variable (string) tempStr
    Attributes
        ID            : 19
        Scope         : local
        Text          : MIDI Channel Assignment
        Max. Text Size: 30
    
Variable (int32) showCoil
    Attributes
        ID   : 20
        Scope: local
        Value: 4294967295
    
Variable (int32) temp
    Attributes
        ID   : 57
        Scope: local
        Value: 0
    
Variable (int32) showChn
    Attributes
        ID   : 64
        Scope: local
        Value: 4294967295
    
Number fStore
    Attributes
        ID                 : 3
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Serial Data format: 'd', Data Byte 1, 2, 3, 4, 5
            // Data byte 1:
            // Data byte 1:
            //   Bits 0-5: coils to which settings apply.
            //   Bits 6-7: Mode
            //     0b00 = MIDI TC Settings Change
            //     Other values = Not used here.
            // Data byte 2: Bit 0-7 correspond to channel 0-7
            // Data byte 3: Bit 0-7 correspond to channel 8-15
            // Data byte 4:
            //   Bit 0-6 contain the Pan value (0-127)
            //   Bit 7: 0: Pan enabled, 1: Pan disabled
            // Data Byte 5:
            //   Bit 0-6: Pan reach, ranging from 0-127. Notes within this range (abs(coilPanPos - notePanPos) <= panReach) will play on this coil.
            //   Bit 7:
            //     0 = linear mode. The volume of the note decreases linearly with the distance from the coil. At distance 0 the volume is equal to the notes volume. At the limit of the range the volume drops to 0.
            //     1 = constant mode. All notes within the range will play at their nominal volume.
            //
            //
            // Convert button state to bit array
            //click fConvBtnState,1
            //
            // Add Pan data to sys0
            //sys0=1-btPanDis.val
            //sys0=sys0<<7
            //sys0+=sPan.val
            // Add pan reach data to sys0
            //sys0=sys0<<1
            //if(bLinConst.txt==sConst.txt)
            //{
            //  sys0+=1
            //}
            //sys0=sys0<<7
            //sys0+=sReach.val
            //sys0=sys0<<16
            //
            // Add button state bit array to sys0 and send the data
            //sys0+=fConvBtnState.val
            //
            // sys1: coil bit. Note that coilNum ranges from 1-6 instead of 0-5
            //sys1=1<<coilNum.val
            //sys1=sys1>>1
            //prints "d",1
            //prints sys1,1
            //prints sys0,4
            // Store settings in coil variable
            //if(coilNum.val==1)
            //{
            //  TC_Settings.coil1Chn.val=sys0
            //}else if(coilNum.val==2)
            //{
            //  TC_Settings.coil2Chn.val=sys0
            //}else if(coilNum.val==3)
            //{
            //  TC_Settings.coil3Chn.val=sys0
            //}else if(coilNum.val==4)
            //{
            //  TC_Settings.coil4Chn.val=sys0
            //}else if(coilNum.val==5)
            //{
            //  TC_Settings.coil5Chn.val=sys0
            //}else if(coilNum.val==6)
            //{
            //  TC_Settings.coil6Chn.val=sys0
            //}
        
Number fConvBtnState
    Attributes
        ID                 : 11
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Store button state in variable. Bit n corresponds to channel n.
            // sys0 only used because shorter, meaning better readable.
            sys0=0
            sys0+=btChn15.val
            sys0=sys0<<1
            sys0+=btChn14.val
            sys0=sys0<<1
            sys0+=btChn13.val
            sys0=sys0<<1
            sys0+=btChn12.val
            sys0=sys0<<1
            sys0+=btChn11.val
            sys0=sys0<<1
            sys0+=btChn10.val
            sys0=sys0<<1
            sys0+=btChn9.val
            sys0=sys0<<1
            sys0+=btChn8.val
            sys0=sys0<<1
            sys0+=btChn7.val
            sys0=sys0<<1
            sys0+=btChn6.val
            sys0=sys0<<1
            sys0+=btChn5.val
            sys0=sys0<<1
            sys0+=btChn4.val
            sys0=sys0<<1
            sys0+=btChn3.val
            sys0=sys0<<1
            sys0+=btChn2.val
            sys0=sys0<<1
            sys0+=btChn1.val
            sys0=sys0<<1
            sys0+=btChn0.val
            fConvBtnState.val=sys0
        
        Touch Release Event
            // Load button state from variable. Bit n corresponds to channel n.
            btChn0.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn1.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn2.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn3.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn4.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn5.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn6.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn7.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn8.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn9.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn10.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn11.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn12.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn13.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn14.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
            btChn15.val=fConvBtnState.val&1
            fConvBtnState.val>>=1
        
Text tHelp
    Attributes
        ID                 : 1
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : 
        Max. Text Size     : 900
    
    Events
        Touch Press Event
            // This object is only visible in help mode. No need to be "transparent" to clicks in normal operation.
            click bReturn,0
        
Text tOverBack
    Attributes
        ID                 : 2
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : 
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
            //
            // This has no purpose except giving help mode an area to click.
        
Text tTitle
    Attributes
        ID                 : 8
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Channel Assignments
        Max. Text Size     : 30
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tUser
    Attributes
        ID                 : 12
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  Guest
        Max. Text Size     : 32
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMSI
    Attributes
        ID                 : 13
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Simple
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMML
    Attributes
        ID                 : 14
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Live
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMLS
    Attributes
        ID                 : 15
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Lightsaber
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tChan
    Attributes
        ID                 : 22
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Channels
        Max. Text Size     : 30
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHideBack
    Attributes
        ID                 : 23
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // This is just to hide the background around the sliders so that you do not turn the outputs off by accident.
        
Text tCoils
    Attributes
        ID                 : 42
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Coils
        Max. Text Size     : 10
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHideBack2
    Attributes
        ID                 : 43
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // This is just to hide the background around the sliders so that you do not turn the outputs off by accident.
        
Text tAction
    Attributes
        ID                 : 52
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Action
        Max. Text Size     : 10
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tOverview
    Attributes
        ID                 : 58
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Overview
        Max. Text Size     : 10
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tChan2
    Attributes
        ID                 : 59
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Channels 1-16
        Max. Text Size     : 20
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tCoils2
    Attributes
        ID                 : 60
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Coils\r\n1-
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tOverInfo
    Attributes
        ID                 : 61
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Filled circles mark which \r\nchannels are unmuted on\r\nwhich coils. 
        Max. Text Size     : 200
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Button bReturn
    Attributes
        ID               : 9
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : â†
        Max. Text Size   : 3
    
    Events
        Touch Press Event
            // Since this code is also executed by the previous/next buttons, it can't be here, otherwise you would see a Touch Press Event on this button, too.
            click fStore,1
        
        Touch Release Event
            // Go back to origin page.
            page MIDI_Live
        
Button bAll
    Attributes
        ID               : 40
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : All
        Max. Text Size   : 6
    
    Events
        Touch Release Event
            if(btShow.val==0)
            {
                btChn0.val=1
                btChn1.val=1
                btChn2.val=1
                btChn3.val=1
                btChn4.val=1
                btChn5.val=1
                btChn6.val=1
                btChn7.val=1
                btChn8.val=1
                btChn9.val=1
                btChn10.val=1
                btChn11.val=1
                btChn12.val=1
                btChn13.val=1
                btChn14.val=1
                btChn15.val=1
            }
        
Button bNone
    Attributes
        ID               : 41
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : None
        Max. Text Size   : 6
    
    Events
        Touch Release Event
            if(btShow.val==0)
            {
                btChn0.val=0
                btChn1.val=0
                btChn2.val=0
                btChn3.val=0
                btChn4.val=0
                btChn5.val=0
                btChn6.val=0
                btChn7.val=0
                btChn8.val=0
                btChn9.val=0
                btChn10.val=0
                btChn11.val=0
                btChn12.val=0
                btChn13.val=0
                btChn14.val=0
                btChn15.val=0
            }
        
Button bAllCoils
    Attributes
        ID               : 50
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : All
        Max. Text Size   : 6
    
    Events
        Touch Release Event
            if(btShow.val==0)
            {
                btCoil1.val=1
                btCoil2.val=1
                btCoil3.val=1
                btCoil4.val=1
                btCoil5.val=1
                btCoil6.val=1
            }
        
Button bNoneCoils
    Attributes
        ID               : 51
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : None
        Max. Text Size   : 6
    
    Events
        Touch Release Event
            if(btShow.val==0)
            {
                btCoil1.val=0
                btCoil2.val=0
                btCoil3.val=0
                btCoil4.val=0
                btCoil5.val=0
                btCoil6.val=0
            }
        
Button bConnect
    Attributes
        ID               : 53
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Connect
        Max. Text Size   : 10
    
    Events
        Touch Press Event
            tmButtonHold.en=1
        
        Touch Release Event
            tmButtonHold.en=0
            if(btShow.val==0)
            {
                click fConvBtnState,1
                for(sys0=0;sys0<TC_Settings.maxCoilCount.val;sys0++)
                {
                    sys1=btCoil1.id+sys0
                    if(b[sys1].val!=0)
                    {
                        // id of related coil settings variable
                        sys1=TC_Settings.coil1Chn.id+sys0
                        TC_Settings.b[sys1].val|=fConvBtnState.val
                    }
                }
                click fResetBtns,0
                click fShow,1
                click fSysex,1
            }else
            {
                btShow.val=0
                click btShow,0
            }
        
Button bDisconnect
    Attributes
        ID               : 54
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Disconnect
        Max. Text Size   : 10
    
    Events
        Touch Press Event
            tmButtonHold.en=1
        
        Touch Release Event
            tmButtonHold.en=0
            if(btShow.val==0)
            {
                click fConvBtnState,1
                // We want to remove said channels (bits) from the selected coil variables.
                // Bitwise removing b from a is a &= ~b. But ~ is not supported by Nextion.
                fConvBtnState.val^=0xffffffff
                for(sys0=0;sys0<=TC_Settings.maxCoilCount.val;sys0++)
                {
                    sys1=btCoil1.id+sys0
                    if(b[sys1].val!=0)
                    {
                        sys1=TC_Settings.coil1Chn.id+sys0
                        TC_Settings.b[sys1].val&=fConvBtnState.val
                    }
                }
                click fResetBtns,0
                click fShow,1
                click fSysex,1
            }else
            {
                btShow.val=0
                click btShow,0
            }
        
Dual-state Button btHelp
    Attributes
        ID               : 4
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : ?
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(btHelp.val==0)
            {
                // In case something was displayed, get rid of it
                bReturn.val=1
                click hHelp,0
                // disable help overlay
                vis hHelp,0
            }else
            {
                vis hHelp,1
            }
            // Restore drawings
            click fDraw,1
        
Dual-state Button btChn0
    Attributes
        ID               : 24
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 1
        Max. Text Size   : 2
    
Dual-state Button btChn1
    Attributes
        ID               : 25
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 2
        Max. Text Size   : 2
    
Dual-state Button btChn2
    Attributes
        ID               : 26
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 3
        Max. Text Size   : 2
    
Dual-state Button btChn3
    Attributes
        ID               : 27
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 4
        Max. Text Size   : 2
    
Dual-state Button btChn4
    Attributes
        ID               : 28
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 5
        Max. Text Size   : 2
    
Dual-state Button btChn5
    Attributes
        ID               : 29
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 6
        Max. Text Size   : 2
    
Dual-state Button btChn6
    Attributes
        ID               : 30
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 7
        Max. Text Size   : 2
    
Dual-state Button btChn7
    Attributes
        ID               : 31
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 8
        Max. Text Size   : 2
    
Dual-state Button btChn8
    Attributes
        ID               : 32
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 9
        Max. Text Size   : 2
    
Dual-state Button btChn9
    Attributes
        ID               : 33
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 10
        Max. Text Size   : 2
    
Dual-state Button btChn10
    Attributes
        ID               : 34
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 11
        Max. Text Size   : 3
    
Dual-state Button btChn11
    Attributes
        ID               : 35
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 12
        Max. Text Size   : 3
    
Dual-state Button btChn12
    Attributes
        ID               : 36
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 13
        Max. Text Size   : 3
    
Dual-state Button btChn13
    Attributes
        ID               : 37
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 14
        Max. Text Size   : 3
    
Dual-state Button btChn14
    Attributes
        ID               : 38
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 15
        Max. Text Size   : 3
    
Dual-state Button btChn15
    Attributes
        ID               : 39
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 16
        Max. Text Size   : 3
    
Dual-state Button btCoil1
    Attributes
        ID               : 44
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 1
        Max. Text Size   : 2
    
Dual-state Button btCoil2
    Attributes
        ID               : 45
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 2
        Max. Text Size   : 2
    
Dual-state Button btCoil3
    Attributes
        ID               : 46
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 3
        Max. Text Size   : 2
    
Dual-state Button btCoil4
    Attributes
        ID               : 47
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 4
        Max. Text Size   : 2
    
Dual-state Button btCoil5
    Attributes
        ID               : 48
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 5
        Max. Text Size   : 2
    
Dual-state Button btCoil6
    Attributes
        ID               : 49
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 6
        Max. Text Size   : 2
    
Dual-state Button btShow
    Attributes
        ID               : 55
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Show
        Max. Text Size   : 10
    
    Events
        Touch Release Event
            // Both when entereing and exiting show mode the button states are reset.
            // Set all DS buttons to 0 since only one shall be clickable at the same time
            click fResetBtns,0
            click fShow,1
        
Hotspot fSysex
    Attributes
        ID               : 6
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Sends a Syntherrupter Sysex command that updates Syntherrupter with whatever
            // has been changed on this page.
            // Package format:
            // F0 00 DMID DMID VERSION DEVICE PN_LSB PN_MSB TG_LSB TG_MSB VAL_LSB VAL VAL VAL VAL_MSB F7
            // DMID DMID = 26 05
            // VERSION = 01
            // DEVICE = 7f (wildcard)
            // PN, TG, VAL: see syntherrupter sysex documentation
            //
            for(sys0=0;sys0<TC_Settings.maxCoilCount.val;sys0++)
            {
                // SYSEX_START DMID VERSION DEVICE
                printh f0 00 26 05 01 7f
                // PN_LSB PN_MSB
                printh 60 00 // set channels for coil
                // TG_LSB
                prints sys0,1// coil
                // TG_MSB
                printh 00
                // VAL (4 bytes to be packed into 5 groups of 7 bit)
                // ID of variable with the channel data of our coil
                sys1=TC_Settings.coil1Chn.id+sys0
                // Note: here we only care about 16 bit so we can hardcode the rest.
                sys1=TC_Settings.b[sys1].val&0xffff
                sys2=sys1&0x7f
                prints sys2,1
                sys1>>=7
                sys2=sys1&0x7f
                prints sys2,1
                sys1>>=7
                sys2=sys1&0x7f
                prints sys2,1
                // remaining 2 VAL bytes, SYSEX_END
                printh 00 00 f7
            }
        
Hotspot fResetBtns
    Attributes
        ID               : 7
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Release Event
            // Reset all channel and coil buttons to 0 (unpresesd)
            // Note: This could be done using a loop, but the loop overhead is significant (increment, check jump).
            // Therefore this is just hardcoded, script-generated code. as so often with Nextion...
            btCoil1.val=0
            btCoil2.val=0
            btCoil3.val=0
            btCoil4.val=0
            btCoil5.val=0
            btCoil6.val=0
            btChn0.val=0
            btChn1.val=0
            btChn2.val=0
            btChn3.val=0
            btChn4.val=0
            btChn5.val=0
            btChn6.val=0
            btChn7.val=0
            btChn8.val=0
            btChn9.val=0
            btChn10.val=0
            btChn11.val=0
            btChn12.val=0
            btChn13.val=0
            btChn14.val=0
            btChn15.val=0
            if(TC_Settings.maxCoilCount.val<2)
            {
                btCoil1.val=1
            }
        
Hotspot fLoadModes
    Attributes
        ID               : 17
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Load active modes
            sys0=Settings.activeModes.val&4
            if(sys0!=0)
            {
                // Lightsaber Mode is active
                tMLS.bco=Settings.backSelectCol2.val
            }
            //
            // Display all active modes
            sys0=Settings.activeModes.val&1
            if(sys0!=0)
            {
                // Simple Mode is active
                tMSI.bco=Settings.backSelectCol2.val
            }
            sys0=Settings.activeModes.val&2
            if(sys0!=0)
            {
                // MIDI Live Mode is active
                tMML.bco=Settings.backSelectCol2.val
            }
        
Hotspot fShow
    Attributes
        ID               : 56
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // x0, y0: table position
            x0=tCoils2.x+tCoils2.w
            y0=tChan2.y+tChan2.h
            // cell size. VALUE IS USED IN THE LOOPS AS WELL, PLS CHECK IF CHANGING IT!
            sys0=8
            // y lim
            //
            y1=y0
            for(sys1=0;sys1<TC_Settings.maxCoilCount.val;sys1++)
            {
                y1+=sys0+2
                if(TC_Settings.maxCoilCount.val>=6&&sys1==3)
                {
                    y1+=2
                }
                x1=x0
                temp.val=TC_Settings.b[TC_Settings.coil1Chn.id+sys1].val
                for(sys2=1;sys2<=32768;sys2<<=1)
                {
                    x1+=sys0+2
                    temp.val=TC_Settings.b[TC_Settings.coil1Chn.id+sys1].val
                    temp.val&=sys2
                    // Delete this circle before drawing a new one.
                    cirs x1,y1,sys0/2,MIDI_Chn_Assgn.bco
                    // In show mode, only the "shown" coils/chns are full size. all others are only half size.
                    if(btShow.val!=0)
                    {
                        if(sys1!=showCoil.val&&sys2!=showChn.val)
                        {
                            sys0/=2
                        }
                    }
                    if(temp.val!=0)
                    {
                        cirs x1,y1,sys0/2,tTitle.pco
                    }else
                    {
                        cir x1,y1,sys0/2,tTitle.pco
                    }
                    if(sys2==8||sys2==128||sys2==2048)
                    {
                        x1+=2
                        if(sys2==128)
                        {
                            // Double spacing in the center.
                            x1+=2
                        }
                    }
                    // Restore sys0 in case it was disabled by show mode
                    sys0=8
                }
            }
        
Hotspot fLoadColors
    Attributes
        ID               : 62
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Changes all page components according to the current color set.
            // Note: This component has to be the last component of the page.
            //
            // sys0: component id
            // sys1: component type
            // sys2: picture id offset for current color mode
            sys2=Settings.colorMode.val*Settings.picCount.val
            for(sys0=0;sys0<fLoadColors.id;sys0++)
            {
                // More convenient for typing
                sys1=b[sys0].type
                if(sys1==121)
                {
                    // Types that have bco
                    // page
                    if(b[sys0].bco==Settings.backCol2Deflt.val)
                    {
                        b[sys0].bco=Settings.backCol2.val
                    }else
                    {
                        b[sys0].bco=Settings.backCol.val
                    }
                }else if(sys1==54||sys1==59||sys1==116||sys1==55)
                {
                    // Types that have bco, pco, and sta:
                    // number, float, text, scroll text
                    if(b[sys0].sta==1)
                    {
                        if(b[sys0].bco==Settings.backCol2Deflt.val)
                        {
                            b[sys0].bco=Settings.backCol2.val
                            b[sys0].pco=Settings.frontCol2.val
                        }else
                        {
                            b[sys0].bco=Settings.backCol.val
                            b[sys0].pco=Settings.frontCol.val
                        }
                    }
                }else if(sys1==98||sys1==53)
                {
                    // Types that have pco, pic, pco2, pic2, sta:
                    // button, dual-state button
                    if(b[sys0].sta==2)
                    {
                        b[sys0].pco=Settings.frontCol.val
                        b[sys0].pco2=Settings.backCol.val
                        b[sys0].pic=b[sys0].pic%Settings.picCount.val
                        b[sys0].pic+=sys2
                        b[sys0].pic2=b[sys0].pic+1
                    }
                }else if(sys1==58)
                {
                    // Types that have bco, pco
                    // QR Code
                    b[sys0].bco=Settings.backCol.val
                    b[sys0].pco=Settings.qrFrontCol.val
                }else if(sys1==1)
                {
                    // Types that have pic, pic1, pic2:
                    // slider
                    b[sys0].pic=b[sys0].pic%Settings.picCount.val
                    b[sys0].pic+=sys2
                    b[sys0].pic1=b[sys0].pic
                    b[sys0].pic2=b[sys0].pic2%Settings.picCount.val
                    b[sys0].pic2+=sys2
                }
            }
        
Hotspot fDraw
    Attributes
        ID               : 63
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Lines between channels, coils, actions, descriptions
            sys0=tCoils.x
            sys1=bNoneCoils.x+bNoneCoils.w
            sys2=bNone.y+bNone.h+bNoneCoils.y
            sys2/=2
            line sys0,sys2,sys1,sys2,tCoils.pco
            sys2=bNoneCoils.y+bNoneCoils.h+btShow.y
            sys2/=2
            line sys0,sys2,sys1,sys2,tCoils.pco
            //sys2=btShow.y+btShow.h+tOverview.y
            //sys2/=2
            sys2-=bNoneCoils.y
            sys2+=bConnect.y
            line sys0,sys2,sys1,sys2,tCoils.pco
            //
            // Draw overview
            click fShow,1
        
Hotspot hHelp
    Attributes
        ID               : 65
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Determine component/feature that would have been touched.
            sys1=0
            for(sys0=fLoadColors.id;sys0>=0;sys0--)
            {
                // Ignore hotspots, touchcaps, variables
                if(b[sys0].type!=5&&b[sys0].type!=51&&b[sys0].type!=52&&b[sys0].type!=109)
                {
                    x0=b[sys0].x
                    y0=b[sys0].y
                    x1=b[sys0].w
                    y1=b[sys0].h
                    x1+=x0
                    y1+=y0
                    if(tch0>=x0&&tch0<x1&&tch1>=y0&&tch1<y1)
                    {
                        sys1=sys0
                        // abort loop
                        sys0=-1
                    }
                }
            }
            if(currentHelp.val>=0&&sys1==bReturn.id)
            {
                // Return button has been pressed while help is being displayed. This means
                // hide the help text again (see touch release event)
                bReturn.val=1
            }else if(sys1==btHelp.id)
            {
                // Question mark button has been pressed. Disable help mode (see touch release event).
                btHelp.val=0
            }else if(currentHelp.val>=0)
            {
                // Help is being displayed and something else has been pressed.
                // Act as if the page background had been pressed.
                // Note: this can make other UI elements to "pop up", therefore bring the text back on top
                // TODO: Prevent flickering!
                click 0,1
                doevents
                ref tHelp
            }else
            {
                // Show help according to what has been touched.
                // Assume that some new help will be displayed
                sys0=1
                tHelp.txt=""
                if(Settings.firstHelp.val!=0)
                {
                    Settings.firstHelp.val=0
                    tHelp.txt+="Help Mode Enabled \r\r"
                    tHelp.txt+="You've enabled the on-screen help by pressing the question mark at the top right \r"
                    tHelp.txt+="corner. As long as it's active, you can press any part of the UI and get a description \r"
                    tHelp.txt+="of what that button/slider/... does. \r"
                    tHelp.txt+="Press the X button at the top left to get help on another part of the UI. \r"
                    tHelp.txt+="Press the question mark at the top right to leave help mode and resume normal\r"
                    tHelp.txt+="operation. \r"
                    tHelp.txt+="Press any other part of the screen, including this description, to disable all outputs. \r"
                    tHelp.txt+="For more information, check the help on the page background.\r"
                    tHelp.txt+=" \r"
                    tHelp.txt+="This tip won't reappear until you reset or power cycle Syntherrupter. \r"
                }else if(sys1==tTitle.id)
                {
                    tHelp.txt+="Coil Limits\r\r"
                    tHelp.txt+="'Absolute Maximum Ratings' of your tesla coil(s) \r"
                    tHelp.txt+="Whether you're using Simple Modoe, MIDI Live Mode or Lightsaber Mode. Any signals\r"
                    tHelp.txt+="that these modes generate, is checked against these limits, ensuring that no matter\r"
                    tHelp.txt+="what you do, no matter which MIDI file you play, the interrupter signal stays within these\r"
                    tHelp.txt+="(hopefully safe) limits.\r"
                }else if(sys1==tUser.id)
                {
                    tHelp.txt+="Current User \r\r"
                    tHelp.txt+="The name of the currently active user. This determines the range within which you \r"
                    tHelp.txt+="can operate Syntherrupter. Go to the main menu to change the current user. \r"
                }else if(sys1==tMSI.id||sys1==tMML.id||sys1==tMLS.id)
                {
                    tHelp.txt+="Active Modes \r\r"
                    tHelp.txt+="Modes can stay active even if you leave the corresponding page. Active modes are \r"
                    tHelp.txt+="highlighted at the bottom right.  \r"
                }else if(sys1==0||sys1==tHelp.id)
                {
                    tHelp.txt+="Page background \r\r"
                    tHelp.txt+="The page background, textboxes and non-interactive elements in general shut down \r"
                    tHelp.txt+="all outputs if you press them. This allows you to quickly stop all outputs and all \r"
                    tHelp.txt+="modes if something goes wrong. \r"
                    tHelp.txt+="Note however, that unplugging is the only actually safe way to ensure a complete \r"
                    tHelp.txt+="shutdown! \r"
                    tHelp.txt+="This feature can be temporarily disabled in the general settings. After a reset or \r"
                    tHelp.txt+="power-cycle it will be enabled again.\r"
                }else if(sys1==bReturn.id)
                {
                    tHelp.txt+="Return Button\r\r"
                    tHelp.txt+="Return to the previous page\r"
                    tHelp.txt+="\r"
                    tHelp.txt+="If you want to leave help mode, press the question mark at the top left. \r"
                }else if(sys1==tAction.id)
                {
                    tHelp.txt+="Action\r\r"
                    tHelp.txt+="For the given selection, decide what to do. Check out the help of each button for further\r"
                    tHelp.txt+="information. \r"
                }else if(sys1==bConnect.id)
                {
                    tHelp.txt+="Connect MIDI Channels and Coils\r\r"
                    tHelp.txt+="Unmute the selected MIDI channels on the selected coils. Each coil plays only the \r"
                    tHelp.txt+="channels connected to it. Others are muted (on that coil!). \r"
                    tHelp.txt+="By default, all coils play all channels. \r"
                    tHelp.txt+="Short press: unmute the selected channels on the selected coils. \r"
                    tHelp.txt+="Long press: unmute all channels on all coils (restoring the power on default). \r"
                }else if(sys1==bDisconnect.id)
                {
                    tHelp.txt+="Disconnect MIDI Channels and Coils\r\r"
                    tHelp.txt+="Mute the selected MIDI channels on the selected coils. Each coil plays only the \r"
                    tHelp.txt+="channels connected to it. Others are muted (on that coil!). \r"
                    tHelp.txt+="By default, all coils play all channels. \r"
                    tHelp.txt+="Short press: mute the selected channels on the selected coils. \r"
                    tHelp.txt+="Long press: mute all channels on all coils. \r"
                }else if(sys1==btShow.id)
                {
                    tHelp.txt+="Show Mute Status of the Selected Coil or Channel\r\r"
                    tHelp.txt+="After switching show mode on, you can select any coil to highlight the channels that are\r"
                    tHelp.txt+="playing on that coil. Alternatively, you can select a channel and see which coils it's \r"
                    tHelp.txt+="playing on. \r"
                    tHelp.txt+="This is on one hand a more limited form of the overview feature at the bottom of the page, \r"
                    tHelp.txt+="on the other hand it might be clearer - especially for checking individual channels (or coils). \r"
                }else if(sys1==tOverBack.id||sys1==tOverview.id||sys1==tOverInfo.id||sys1==tCoils2.id||sys1==tChan2.id)
                {
                    tHelp.txt+="Channel Mute Status Overview\r\r"
                    tHelp.txt+="This section displays a little overview, telling you the mute status for all channels on\r"
                    tHelp.txt+="all outputs. \r"
                }else if(sys1<=bNone.id)
                {
                    tHelp.txt+="MIDI Channel Selection\r\r"
                    tHelp.txt+="Select which channels shall be connected or disconnected to/from the selected coils. \r"
                    tHelp.txt+="The 'All' and 'None' buttons are shortcuts to make life easier. \r"
                }else if(sys1<=bNoneCoils.id)
                {
                    tHelp.txt+="Coil Selection\r\r"
                    tHelp.txt+="Select which coils shall be connected or disconnected to/from the selected channels. \r"
                    tHelp.txt+="The 'All and 'None' buttons are shortcuts to make life easier. \r"
                }else
                {
                    // Nope, no new help text to be displayed
                    sys0=0
                }
                if(sys0!=0)
                {
                    currentHelp.val=sys1
                    vis tHelp,1
                    if(bReturn.txt!="âœ•")
                    {
                        bReturn.txt="âœ•"
                    }
                }
            }
        
        Touch Release Event
            // Check if help text is being displayed and shall be hidden again
            if(bReturn.val==1)
            {
                bReturn.val=0
                if(bReturn.txt!="â†")
                {
                    bReturn.txt="â†"
                }
                vis tHelp,0
                click fDraw,1
                currentHelp.val=-1
            }else if(sys1==btHelp.id)
            {
                click btHelp,0
            }
        
Timer tmButtonHold
    Attributes
        ID         : 21
        Scope      : local
        Period (ms): 250
        Enabled    : no
    
    Events
        Timer Event
            click bAll,0
            click bAllCoils,0
        
TouchCap touchCap
    Attributes
        ID   : 18
        Scope: local
        Value: 0
    
    Events
        Touch Press Event
            showCoil.val=-1
            showChn.val=-1
            if(btShow.val==1)
            {
                bNone.val=0
                bNoneCoils.val=0
                if(touchCap.val>=btCoil1.id&&touchCap.val<=btCoil6.id)
                {
                    click fResetBtns,0
                    // Coil Number
                    sys0=touchCap.val-btCoil1.id
                    showChn.val=-1
                    showCoil.val=sys0
                    // Resulting variable id
                    sys0+=TC_Settings.coil1Chn.id
                    fConvBtnState.val=TC_Settings.b[sys0].val
                    // If no channel is associated with this coil, highlight the "None" button.
                    if(fConvBtnState.val==0)
                    {
                        bNone.val=1
                    }
                    // Show assigned channels for selected coil.
                    click fConvBtnState,0
                }else if(touchCap.val>=btChn0.id&&touchCap.val<=btChn15.id)
                {
                    click fResetBtns,0
                    // If no coil is associated with this channel, highlight the "None" button.
                    // In this case, enable it by default and disable it once a coil has been
                    // found for the given channel (see below).
                    bNoneCoils.val=1
                    // Need to convert from channels per coil to coils per channel
                    // Selected channel number
                    sys1=touchCap.val-btChn0.id
                    showChn.val=1<<sys1 // see fShow for why it's 1<<x instead of x.
                    showCoil.val=-1
                    // Corresponding bit
                    sys1=1<<sys1
                    for(sys0=0;sys0<TC_Settings.maxCoilCount.val;sys0++)
                    {
                        // Determine variable id with settings
                        sys2=TC_Settings.coil1Chn.id+sys0
                        // Check if this coil has the bit for the selected channel set.
                        sys2=TC_Settings.b[sys2].val&sys1
                        // Normalize values > 1 (f.ex 0x10) to 1
                        if(sys2>0)
                        {
                            sys2=1
                            bNoneCoils.val=0
                        }
                        // Apply state to button.
                        b[btCoil1.id+sys0].val=sys2
                    }
                }
                // If any assignments are shown, highlight them in the overview as well.
                if(showChn.val>=0||showCoil.val>=0)
                {
                    click fShow,1
                }
            }
        
