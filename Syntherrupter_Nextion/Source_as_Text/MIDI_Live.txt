Page MIDI_Live
    Attributes
        ID               : 0
        Scope            : local
        Send Component ID: disabled
        Locked           : no
    
    Events
        Preinitialize Event
            // Prevent page refreshs until postinit
            ref_stop
            //
            // Entered MIDI Live Mode. MIDI Live is now active
            Settings.activeModes.val=Settings.activeModes.val|2
            //
            // Load colors
            click fLoadColors,1
            click fLoadModes,1
            //
            // Display username
            if(User_Settings.userNum.val==0)
            {
                tUser.txt=" "+User_Settings.u0Name.txt
            }else if(User_Settings.userNum.val==1)
            {
                tUser.txt=" "+User_Settings.u1Name.txt
            }else if(User_Settings.userNum.val==2)
            {
                tUser.txt=" "+User_Settings.u2Name.txt
            }
            //
            vis fLoadModes,0
            vis fLoadColors,0
            //
            tmReturn.tim=Other_Settings.nHoldTime.val
            // Functions shall be invisible
            vis fSqrt,0
            vis fSlider,0
            vis fLoadColors,0
            vis fApply,0
            // Hide buttons for unavailable tesla coils
            if(TC_Settings.maxCoilCount.val<6)
            {
                vis btCoil6,0
                vis nOn6,0
                vis nDuty6,0
            }
            if(TC_Settings.maxCoilCount.val<5)
            {
                vis btCoil5,0
                vis nOn5,0
                vis nDuty5,0
            }
            if(TC_Settings.maxCoilCount.val<4)
            {
                vis btCoil4,0
                vis nOn4,0
                vis nDuty4,0
            }
            if(TC_Settings.maxCoilCount.val<3)
            {
                vis btCoil3,0
                vis nOn3,0
                vis nDuty3,0
            }
            if(TC_Settings.maxCoilCount.val<2)
            {
                // Single Coil Mode. No need to show a select option.
                vis btCoil2,0
                vis nOn2,0
                vis nDuty2,0
                vis btCoil1,0
                vis nOn1,0
                vis nDuty1,0
                vis tCoil,0
                vis tus1,0
                vis tPerc1,0
                // Make sure that the coil is active.
                btCoil1.val=1
                click btCoil1,0
            }
            // Load button state. Note: At the time of writing I didn't know that Nextion now supports bitwise operations.
            sys0=32
            sys1=TC_Settings.activeCoils.val
            if(sys1>=sys0)
            {
                btCoil6.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil5.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil4.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil3.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil2.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil1.val=1
                sys1-=sys0
            }
            // Load user's ontime and duty limit.
            if(User_Settings.userNum.val==2)
            {
                userOnLimit.val=User_Settings.u2Ontime.val
                userDutyLimit.val=User_Settings.u2Duty.val
            }else if(User_Settings.userNum.val==1)
            {
                userOnLimit.val=User_Settings.u1Ontime.val
                userDutyLimit.val=User_Settings.u1Duty.val
            }else
            {
                userOnLimit.val=User_Settings.u0Ontime.val
                userDutyLimit.val=User_Settings.u0Duty.val
            }
            // Load Ontime and Duty from variables. Note: variables take much less space than displayed elements and are therefore better as persistent (= global) variables.
            nOn.val=ontime.val
            nDuty.val=duty.val
            nOn1.val=set1.val&0xffff
            set1.val=set1.val>>16
            nDuty1.val=set1.val&0xffff
            nOn2.val=set2.val&0xffff
            set2.val=set2.val>>16
            nDuty2.val=set2.val&0xffff
            nOn3.val=set3.val&0xffff
            set3.val=set3.val>>16
            nDuty3.val=set3.val&0xffff
            nOn4.val=set4.val&0xffff
            set4.val=set4.val>>16
            nDuty4.val=set4.val&0xffff
            nOn5.val=set5.val&0xffff
            set5.val=set5.val>>16
            nDuty5.val=set5.val&0xffff
            nOn6.val=set6.val&0xffff
            set6.val=set6.val>>16
            nDuty6.val=set6.val&0xffff
            // Restore slider positions
            fSliderInput.val=sDuty.maxval
            fSliderOutput.val=userDutyLimit.val
            fSlider.val=nDuty.val
            click fSlider,0
            sDuty.val=fSlider.val
            fSliderInput.val=sOn.maxval
            fSliderOutput.val=userOnLimit.val
            fSlider.val=nOn.val
            click fSlider,0
            sOn.val=fSlider.val
            sOnOld.val=sOn.val
            sDutyOld.val=sDuty.val
            //
            // View current mode of applying
            vis bMode,0
            vis bApply,0
            Settings.applyingMode.val--
            click bMode,0
            //
            // Make sure the microcontroller is up-to-date
            click fApply,0
            // Tell the microcontroller: Mode: Midi Live
            prints "mml",3
            //
            // Load Help Mode
            if(Help_Info.helpMode.val==0)
            {
                vis qrHelp,0
            }else
            {
                tempStr.txt=tTitle.txt
                showHelp.val=1
                click 0,1
            }
            //
            // Enable page refreshs again
            ref_star
        
        Postinitialize Event
            // Draw grid lines
            // sys0: start, sys1: end, sys2: vertical position
            if(TC_Settings.maxCoilCount.val>=2)
            {
                sys0=tus1.x
                if(TC_Settings.maxCoilCount.val>=6)
                {
                    sys1=nOn6.x+nOn6.w
                }else if(TC_Settings.maxCoilCount.val>=5)
                {
                    sys1=nOn5.x+nOn5.w
                }else if(TC_Settings.maxCoilCount.val>=4)
                {
                    sys1=nOn4.x+nOn4.w
                }else if(TC_Settings.maxCoilCount.val>=3)
                {
                    sys1=nOn3.x+nOn3.w
                }else // if(TC_Settings.maxCoilCount.val>=2)
                {
                    sys1=nOn2.x+nOn2.w
                }
                sys2=tus1.y+tus1.h
                line sys0,sys2,sys1,sys2,tus1.pco
            }
            //
            // Line above related settings
            sys0=bChnAssign.x
            sys1=bApply.x+bApply.w
            sys2=bChnAssign.y+bApply.y+bApply.h
            sys2/=2
            line sys0,sys2,sys1,sys2,tTitle.pco
            //
            vis bMode,1
            //
            // Check if any channels are enabled, If not, blink the corresponding button to make the user aware.
            sys0=TC_Settings.coil1Chn.val|TC_Settings.coil2Chn.val|TC_Settings.coil3Chn.val|TC_Settings.coil4Chn.val|TC_Settings.coil5Chn.val|TC_Settings.coil6Chn.val
            prints sys0,0
            sys0&=0xffff
            if(sys0==0)
            {
                tmBlink.en=1
            }
        
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal Operation
                if(Other_Settings.nBackOff.val!=0)
                {
                    // Default "stop" action.
                    // Send Mode Emergency Stop which turns all outputs off (but actually keeps the current mode)
                    prints "mes",3
                    // Set all ontime and duty settings of all pages to 0.
                    // First come the global variables then the local variables.
                    Simple.ontime.val=0
                    Simple.duty.val=0
                    Simple.set1.val=Simple.set1.val&0x0000ffff
                    Simple.set2.val=Simple.set2.val&0x0000ffff
                    Simple.set3.val=Simple.set3.val&0x0000ffff
                    Simple.set4.val=Simple.set4.val&0x0000ffff
                    Simple.set5.val=Simple.set5.val&0x0000ffff
                    Simple.set6.val=Simple.set6.val&0x0000ffff
                    MIDI_Live.ontime.val=0
                    MIDI_Live.duty.val=0
                    MIDI_Live.set1.val=0
                    MIDI_Live.set2.val=0
                    MIDI_Live.set3.val=0
                    MIDI_Live.set4.val=0
                    MIDI_Live.set5.val=0
                    MIDI_Live.set6.val=0
                    Lightsaber.ontime.val=0
                    Lightsaber.ontimes12.val=0
                    Lightsaber.ontimes34.val=0
                    Lightsaber.ontimes56.val=0
                    nOn.val=0
                    sOn.val=0
                    nOn1.val=0
                    nOn2.val=0
                    nOn3.val=0
                    nOn4.val=0
                    nOn5.val=0
                    nOn6.val=0
                    nDuty.val=0
                    sDuty.val=0
                    nDuty1.val=0
                    nDuty2.val=0
                    nDuty3.val=0
                    nDuty4.val=0
                    nDuty5.val=0
                    nDuty6.val=0
                }
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf22"
                click qrHelp,0
            }
        
        Page Exit Event
            // Store Ontime and Duty in global variables. Note: variables take much less space than displayed elements and are therefore better as persistent (= global) variables.
            ontime.val=nOn.val
            duty.val=nDuty.val
            set1.val=nDuty1.val<<16
            set1.val+=nOn1.val
            set2.val=nDuty2.val<<16
            set2.val+=nOn2.val
            set3.val=nDuty3.val<<16
            set3.val+=nOn3.val
            set4.val=nDuty4.val<<16
            set4.val+=nOn4.val
            set5.val=nDuty5.val<<16
            set5.val+=nOn5.val
            set6.val=nDuty6.val<<16
            set6.val+=nOn6.val
        
Variable (string) sCoil
    Attributes
        ID            : 18
        Scope         : local
        Text          : 0
        Max. Text Size: 3
    
Variable (int32) newData
    Attributes
        ID   : 19
        Scope: local
        Value: 0
    
Variable (int32) ontime
    Attributes
        ID   : 20
        Scope: global
        Value: 0
    
Variable (int32) duty
    Attributes
        ID   : 21
        Scope: global
        Value: 0
    
Variable (int32) openEE
    Attributes
        ID   : 23
        Scope: local
        Value: 0
    
Variable (int32) set1
    Attributes
        ID   : 24
        Scope: global
        Value: 0
    
Variable (int32) set2
    Attributes
        ID   : 25
        Scope: global
        Value: 0
    
Variable (int32) set3
    Attributes
        ID   : 26
        Scope: global
        Value: 0
    
Variable (int32) set4
    Attributes
        ID   : 27
        Scope: global
        Value: 0
    
Variable (int32) set5
    Attributes
        ID   : 28
        Scope: global
        Value: 0
    
Variable (int32) set6
    Attributes
        ID   : 29
        Scope: global
        Value: 0
    
Variable (int32) fSliderInput
    Attributes
        ID   : 31
        Scope: local
        Value: 0
    
Variable (int32) fSliderOutput
    Attributes
        ID   : 32
        Scope: local
        Value: 0
    
Variable (int32) userOnLimit
    Attributes
        ID   : 33
        Scope: local
        Value: 0
    
Variable (int32) userDutyLimit
    Attributes
        ID   : 34
        Scope: local
        Value: 0
    
Variable (string) tempStr
    Attributes
        ID            : 54
        Scope         : local
        Text          : 
        Max. Text Size: 32
    
Variable (int32) showHelp
    Attributes
        ID   : 55
        Scope: local
        Value: 0
    
Variable (int32) sOnOld
    Attributes
        ID   : 58
        Scope: local
        Value: 0
    
Variable (int32) sDutyOld
    Attributes
        ID   : 59
        Scope: local
        Value: 0
    
Number nOn
    Attributes
        ID                 : 5
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 9999
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number fSlider
    Attributes
        ID                 : 30
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // fXxxx are functions. Since they need to be clicked to execute their code they need to be on the same page. Usage:
            // 1. set the component value (fXxx.val) to the input value
            // 2. Execute code with "click fXxxx,1".
            // 3. Read the result from the component value (fXxx.val)
            //
            // Touch Press: g = o * f(x / i) with f(x) = (x^2 + x) / 2, i: input range, o: output range. => g = (x^2 + i * x) * o / (2 * i^2)
            // Touch Release: g^-1 = ( sqrt( ( x * 8 + o ) * o ) - o ) * i / ( 2 * o )
            //
            sys0=fSlider.val
            fSlider.val=sys0*sys0
            sys0*=fSliderInput.val
            fSlider.val+=sys0
            fSlider.val*=fSliderOutput.val
            sys0=2*fSliderInput.val*fSliderInput.val
            fSlider.val/=sys0
        
        Touch Release Event
            // fXxxx are functions. Since they need to be clicked to execute their code they need to be on the same page. Usage:
            // 1. set the component value (fXxx.val) to the input value
            // 2. Execute code with "click fXxxx,1".
            // 3. Read the result from the component value (fXxx.val)
            //
            // Touch Press: g = o * f(x / i) with f(x) = (x^2 + x) / 2, i: input range, o: output range. => g = (x^2 + i * x) * o / (2 * i^2)
            // Touch Release: g^-1 = ( sqrt( ( x * 8 + o ) * o ) - o ) * i / ( 2 * o )
            //
            fSqrt.val=fSlider.val*8
            fSqrt.val+=fSliderOutput.val
            fSqrt.val*=fSliderOutput.val
            click fSqrt,1
            fSqrt.val-=fSliderOutput.val
            fSqrt.val*=fSliderInput.val
            sys0=2*fSliderOutput.val
            fSlider.val=fSqrt.val/sys0
        
Number fSqrt
    Attributes
        ID                 : 35
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // fXxxx are functions. Since they need to be clicked to execute their code they need to be on the same page. Usage:
            // 1. set the component value (fXxx.val) to the input value
            // 2. Execute code with "click fXxxx,1".
            // 3. Read the result from the component value (fXxx.val)
            // This functions calculates the square root. Source: https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Binary_numeral_system_(base_2)
            sys0=0
            sys1=1
            while(sys1<=fSqrt.val)
            {
                sys1=sys1<<2
            }
            sys1=sys1>>2
            while(sys1!=0)
            {
                sys2=sys0+sys1
                if(fSqrt.val>=sys2)
                {
                    fSqrt.val-=sys2
                    sys0=sys0>>1
                    sys0+=sys1
                }else
                {
                    sys0=sys0>>1
                }
                sys1=sys1>>2
            }
            fSqrt.val=sys0
        
Number nOn1
    Attributes
        ID                 : 42
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn2
    Attributes
        ID                 : 43
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn3
    Attributes
        ID                 : 44
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn4
    Attributes
        ID                 : 45
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn5
    Attributes
        ID                 : 46
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn6
    Attributes
        ID                 : 47
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty
    Attributes
        ID                 : 8
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty1
    Attributes
        ID                 : 48
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty2
    Attributes
        ID                 : 49
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty3
    Attributes
        ID                 : 50
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty4
    Attributes
        ID                 : 51
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty5
    Attributes
        ID                 : 52
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty6
    Attributes
        ID                 : 53
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHideBack1
    Attributes
        ID                 : 1
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // This is just to hide the background around the sliders so that you do not turn the outputs off by accident.
        
Text tCoil
    Attributes
        ID                 : 2
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Apply to:
        Max. Text Size     : 20
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHideBack
    Attributes
        ID                 : 3
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // This is just to hide the background around the sliders so that you do not turn the outputs off by accident.
        
Text tDuty
    Attributes
        ID                 : 7
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Note Duty:
        Max. Text Size     : 20
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tPerc
    Attributes
        ID                 : 9
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : %
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tus
    Attributes
        ID                 : 11
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : µs
        Max. Text Size     : 2
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tOn
    Attributes
        ID                 : 36
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Note Ontime:
        Max. Text Size     : 20
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tUser
    Attributes
        ID                 : 38
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  Guest
        Max. Text Size     : 32
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMSI
    Attributes
        ID                 : 39
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Simple
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMML
    Attributes
        ID                 : 40
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Live
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMLS
    Attributes
        ID                 : 41
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Lightsaber
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tus1
    Attributes
        ID                 : 62
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : µs
        Max. Text Size     : 2
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tPerc1
    Attributes
        ID                 : 63
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : %
        Max. Text Size     : 2
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tTitle
    Attributes
        ID                 : 65
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Live Mode
        Max. Text Size     : 22
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
QR Code qrHelp
    Attributes
        ID               : 61
        Scope            : local
        Send Component ID: disabled
        Text             : git.io/JkvOK
        Max. Text Size   : 16
    
    Events
        Touch Release Event
            if(showHelp.val==0)
            {
                showHelp.val=1
                tempStr.txt=tTitle.txt
                tTitle.txt="Get Help/Link for..."
                // keep QR code on top
                ref qrHelp
                // Show modified title before stopping screen refreshs.
                doevents
                ref_stop
            }else
            {
                showHelp.val=0
                tTitle.txt=tempStr.txt
                // keep QR code on top
                ref qrHelp
                ref_star
            }
        
Slider sOn
    Attributes
        ID               : 4
        Scope            : local
        Send Component ID: disabled
        Position         : 0
        Upper range limit: 366
        Lower range limit: 0
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                // Slider minval = 0
                // Slider maxval = SliderWidth - CursorWIdth - 1
                // => Slider resolution equals slider "pixel" resolution
                fSliderInput.val=sOn.maxval
                fSliderOutput.val=userOnLimit.val
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2r"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                fSlider.val=sOn.val
                click fSlider,1
                // Reduce resolution according to slider range for more "consistent" steps.
                sys0=1
                if(fSlider.val>=10000)
                {
                    sys0=1000
                }else if(fSlider.val>=5000)
                {
                    sys0=500
                }else if(fSlider.val>=1000)
                {
                    sys0=100
                }else if(fSlider.val>=500)
                {
                    sys0=50
                }else if(fSlider.val>=100)
                {
                    sys0=10
                }else if(fSlider.val>=50)
                {
                    sys0=5
                }
                fSlider.val/=sys0
                fSlider.val*=sys0
                if(nOn.val!=fSlider.val)
                {
                    newData.val=1
                    nOn.val=fSlider.val
                }
                // to understand the following lines have a look at the Touch Move code.
                // what you would actually wanna do is put the code above in touch move and perform a click event on touch move here (because your can press/release a slider, changing its value without moving it).
                // However "click" can only execute press/release events, so it gets more complicated...
                if(Settings.applyingMode.val>=1)
                {
                    click fApply,0
                }
                // Store slider position in case of a "help touch"
                sOnOld.val=sOn.val
            }else
            {
                // Show Help
                // Restore slider position after a "help touch"
                sOn.val=sOnOld.val
                click qrHelp,0
            }
        
Slider sDuty
    Attributes
        ID               : 6
        Scope            : local
        Send Component ID: disabled
        Position         : 0
        Upper range limit: 366
        Lower range limit: 0
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                fSliderInput.val=sDuty.maxval
                fSliderOutput.val=userDutyLimit.val
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2o"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                fSlider.val=sDuty.val
                click fSlider,1
                if(nDuty.val!=fSlider.val)
                {
                    newData.val=1
                    nDuty.val=fSlider.val
                }
                // to understand the following lines have a look at the Touch Move code.
                // what you would actually wanna do is put the code above in touch move and perform a click event on touch move here (because your can press/release a slider, changing its value without moving it).
                // However "click" can only execute press/release events, so it gets more complicated...
                if(Settings.applyingMode.val>=1)
                {
                    click fApply,0
                }
                // Store slider position in case of a "help touch"
                sDutyOld.val=sDuty.val
            }else
            {
                // Show Help
                // Restore slider position after a "help touch"
                sDuty.val=sDutyOld.val
                click qrHelp,0
            }
        
Button bApply
    Attributes
        ID               : 10
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Apply now
        Max. Text Size   : 15
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                tmEE.en=1
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf26"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                click fApply,0
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Button bMode
    Attributes
        ID               : 57
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Manually
        Max. Text Size   : 15
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
            }else
            {
                // Show Help
                qrHelp.txt="git.io/JkfaL"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                Settings.applyingMode.val++
                if(Settings.applyingMode.val==2)
                {
                    bMode.txt="Immediately"
                    vis bApply,0
                }else if(Settings.applyingMode.val==1)
                {
                    bMode.txt="On Release"
                    vis bApply,0
                }else // higher than allowed, jump back to 0
                {
                    Settings.applyingMode.val=0
                    bMode.txt="Manually"
                    vis bApply,1
                }
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Button bReturn
    Attributes
        ID               : 64
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : â†
        Max. Text Size   : 3
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                // If button is hold, return without "exiting" MIDI Live mode (keep it running in background.
                tmReturn.en=1
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2P"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                tmReturn.en=0
                // Leaving MIDI Live Mode. Mode is now inactive
                Settings.activeModes.val=Settings.activeModes.val^2
                // Mode: EXit.
                prints "mex",0
                page Menu
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Button bNRPReset
    Attributes
        ID               : 67
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : NRP Reset
        Max. Text Size   : 10
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2i"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // See Stereo_Chns.fNRP
                for(sys0=0xb0;sys0<0xbf;sys0++)
                {
                    prints sys0,1
                    printh 63 2a 62 00 06 00 26 00 62 01 06 127 26 00 62 02 06 127 26 00
                }
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Button bChnAssign
    Attributes
        ID               : 68
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Chn. Assign.
        Max. Text Size   : 20
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2i"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                page MIDI_Chn_Assgn
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Button bChnStereo
    Attributes
        ID               : 69
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Chn. Stereo
        Max. Text Size   : 26
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil1.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                // Basically copy paste from tmTCButtonHold
                Stereo_Chns.origin.val=dp
                page Stereo_Chns
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Button bCoilStereo
    Attributes
        ID               : 70
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Coil Stereo
        Max. Text Size   : 26
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil1.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                Stereo_Coils.origin.val=dp
                page Stereo_Coils
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Button bStereoOverv
    Attributes
        ID               : 71
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Stereo Overview
        Max. Text Size   : 20
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2i"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                page MIDI_Chn_Assgn
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Dual-state Button btCoil1
    Attributes
        ID               : 12
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 1
        Max. Text Size   : 3
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil1.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                // A coil might have been enabled, and thus does not have the currently displayed values.
                newData.val=1
                //  Bit 0-5 correspond to the state of the buttons btCoil1-btCoil6
                sys0=btCoil1.val
                sys0=btCoil2.val*2+sys0
                sys0=btCoil3.val*4+sys0
                sys0=btCoil4.val*8+sys0
                sys0=btCoil5.val*16+sys0
                sys0=btCoil6.val*32+sys0
                // Store settings
                TC_Settings.activeCoils.val=sys0
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Dual-state Button btCoil2
    Attributes
        ID               : 13
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 2
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil2.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                click btCoil1,0
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Dual-state Button btCoil3
    Attributes
        ID               : 14
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 3
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil3.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                click btCoil1,0
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Dual-state Button btCoil4
    Attributes
        ID               : 15
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 4
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil4.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                click btCoil1,0
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Dual-state Button btCoil5
    Attributes
        ID               : 16
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 5
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil5.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                click btCoil1,0
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Dual-state Button btCoil6
    Attributes
        ID               : 17
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 6
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            if(showHelp.val==0)
            {
                // Normal operation
                sCoil.txt=btCoil6.txt
            }else
            {
                // Show Help
                qrHelp.txt="git.io/Jkf2K"
            }
        
        Touch Release Event
            if(showHelp.val==0)
            {
                // Normal operation
                click btCoil1,0
            }else
            {
                // Show Help
                click qrHelp,0
            }
        
Hotspot fApply
    Attributes
        ID               : 56
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Changes all page components according to the current color set.
            // Note: This component has to be the last component of the page.
            //
            // sys0: component id
            // sys1: component type
            // sys2: picture id offset for current color mode
            sys2=Settings.colorMode.val*Settings.picCount.val
            for(sys0=0;sys0<fLoadColors.id;sys0++)
            {
                // More convenient for typing
                sys1=b[sys0].type
                if(sys1==121)
                {
                    // Types that have bco
                    // page
                    if(b[sys0].bco!=Settings.backCol2.val)
                    {
                        b[sys0].bco=Settings.backCol.val
                    }
                }else if(sys1==54||sys1==59||sys1==116||sys1==55)
                {
                    // Types that have bco, pco, and sta:
                    // number, float, text, scroll text
                    if(b[sys0].sta==1)
                    {
                        if(b[sys0].bco!=Settings.backCol2.val)
                        {
                            b[sys0].bco=Settings.backCol.val
                            b[sys0].pco=Settings.frontCol.val
                        }else
                        {
                            b[sys0].pco=Settings.frontCol2.val
                        }
                    }
                }else if(sys1==98||sys1==53)
                {
                    // Types that have pco, pic, pco2, pic2, sta:
                    // button, dual-state button
                    if(b[sys0].sta==2)
                    {
                        b[sys0].pco=Settings.frontCol.val
                        b[sys0].pco2=Settings.backCol.val
                        b[sys0].pic=b[sys0].pic%Settings.picCount.val
                        b[sys0].pic+=sys2
                        b[sys0].pic2=b[sys0].pic+1
                    }
                }else if(sys1==58)
                {
                    // Types that have bco, pco
                    // QR Code
                    b[sys0].bco=Settings.backCol.val
                    b[sys0].pco=Settings.qrFrontCol.val
                }else if(sys1==1)
                {
                    // Types that have pic, pic2:
                    // slider
                    b[sys0].pic=b[sys0].pic%Settings.picCount.val
                    b[sys0].pic+=sys2
                    b[sys0].pic2=b[sys0].pic2%Settings.picCount.val
                    b[sys0].pic2+=sys2
                }
            }
        
        Touch Release Event
            // Return format: 'd', data byte 1, 2, 3, 4, 5
            // Data byte 1:
            //   Bits 0-5: coils to which settings apply.
            //   Bits 6-7: Mode
            //     0 = Settings Change (not used here)
            //     1 = NRP Reset (not used here)
            //     2 = unused
            //     3 = Volume change
            // Data byte 2: ontime[us] lower byte
            // Data byte 3: ontime[us] upper byte
            // Data byte 4: duty[1/1000] lower byte
            // Data byte 5: duty[1/1000] upper byte
            sys0=newData.val*TC_Settings.activeCoils.val
            if(sys0>0)
            {
                if(btCoil1.val==1)
                {
                    nOn1.val=nOn.val
                    nDuty1.val=nDuty.val
                }
                if(btCoil2.val==1)
                {
                    nOn2.val=nOn.val
                    nDuty2.val=nDuty.val
                }
                if(btCoil3.val==1)
                {
                    nOn3.val=nOn.val
                    nDuty3.val=nDuty.val
                }
                if(btCoil4.val==1)
                {
                    nOn4.val=nOn.val
                    nDuty4.val=nDuty.val
                }
                if(btCoil5.val==1)
                {
                    nOn5.val=nOn.val
                    nDuty5.val=nDuty.val
                }
                if(btCoil6.val==1)
                {
                    nOn6.val=nOn.val
                    nDuty6.val=nDuty.val
                }
                // shift bits for volume mode
                sys1=3<<6
                // Add which coils are affected
                sys1+=TC_Settings.activeCoils.val
                // sys2 contains ontime and duty data.
                sys2=0
                sys2=nDuty.val
                sys2=sys2<<16
                sys2+=nOn.val
                prints "d",0
                prints sys1,1
                prints sys2,4
                newData.val=0
            }
            //
            tmEE.en=0
            if(openEE.val!=0)
            {
                openEE.val=0
                // Important date! (DDMMYYYY)
                sys0=11102161
                prints "c",0
                prints sys0,3
            }
        
Hotspot fLoadModes
    Attributes
        ID               : 60
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Load active modes
            sys0=Settings.activeModes.val&4
            if(sys0!=0)
            {
                // Lightsaber Mode is active
                tMLS.bco=Settings.backSelectCol2.val
            }
            //
            // Display all active modes
            sys0=Settings.activeModes.val&1
            if(sys0!=0)
            {
                // Simple Mode is active
                tMSI.bco=Settings.backSelectCol2.val
            }
            sys0=Settings.activeModes.val&2
            if(sys0!=0)
            {
                // MIDI Live Mode is active
                tMML.bco=Settings.backSelectCol2.val
            }
        
Hotspot fLoadColors
    Attributes
        ID               : 72
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Changes all page components according to the current color set.
            // Note: This component has to be the last component of the page.
            //
            // sys0: component id
            // sys1: component type
            // sys2: picture id offset for current color mode
            sys2=Settings.colorMode.val*Settings.picCount.val
            for(sys0=0;sys0<fLoadColors.id;sys0++)
            {
                // More convenient for typing
                sys1=b[sys0].type
                if(sys1==121)
                {
                    // Types that have bco
                    // page
                    if(b[sys0].bco==Settings.backCol2Deflt.val)
                    {
                        b[sys0].bco=Settings.backCol2.val
                    }else
                    {
                        b[sys0].bco=Settings.backCol.val
                    }
                }else if(sys1==54||sys1==59||sys1==116||sys1==55)
                {
                    // Types that have bco, pco, and sta:
                    // number, float, text, scroll text
                    if(b[sys0].sta==1)
                    {
                        if(b[sys0].bco==Settings.backCol2Deflt.val)
                        {
                            b[sys0].bco=Settings.backCol2.val
                            b[sys0].pco=Settings.frontCol2.val
                        }else
                        {
                            b[sys0].bco=Settings.backCol.val
                            b[sys0].pco=Settings.frontCol.val
                        }
                    }
                }else if(sys1==98||sys1==53)
                {
                    // Types that have pco, pic, pco2, pic2, sta:
                    // button, dual-state button
                    if(b[sys0].sta==2)
                    {
                        b[sys0].pco=Settings.frontCol.val
                        b[sys0].pco2=Settings.backCol.val
                        b[sys0].pic=b[sys0].pic%Settings.picCount.val
                        b[sys0].pic+=sys2
                        b[sys0].pic2=b[sys0].pic+1
                    }
                }else if(sys1==58)
                {
                    // Types that have bco, pco
                    // QR Code
                    b[sys0].bco=Settings.backCol.val
                    b[sys0].pco=Settings.qrFrontCol.val
                }else if(sys1==1)
                {
                    // Types that have pic, pic1, pic2:
                    // slider
                    b[sys0].pic=b[sys0].pic%Settings.picCount.val
                    b[sys0].pic+=sys2
                    b[sys0].pic1=b[sys0].pic
                    b[sys0].pic2=b[sys0].pic2%Settings.picCount.val
                    b[sys0].pic2+=sys2
                }
            }
        
Timer tmEE
    Attributes
        ID         : 22
        Scope      : local
        Period (ms): 6000
        Enabled    : no
    
    Events
        Timer Event
            openEE.val=1
        
Timer tmReturn
    Attributes
        ID         : 37
        Scope      : local
        Period (ms): 250
        Enabled    : no
    
    Events
        Timer Event
            tmReturn.en=0
            // Leave page but keep MIDI Live Mode active in background.
            page Menu
        
Timer tmBlink
    Attributes
        ID         : 66
        Scope      : local
        Period (ms): 500
        Enabled    : no
    
    Events
        Timer Event
            bChnAssign.val=1-bChnAssign.val
        
