Page MIDI_Live
    Attributes
        ID               : 0
        Scope            : local
        Send Component ID: disabled
        Locked           : no
    
    Events
        Preinitialize Event
            // Prevent page refreshs until postinit
            ref_stop
            //
            // Entered MIDI Live Mode. MIDI Live is now active
            Settings.activeModes.val=Settings.activeModes.val|2
            //
            // Load colors
            click fLoadColors,1
            click fLoadModes,1
            //
            // Display username
            if(User_Settings.userNum.val==0)
            {
                tUser.txt=" "+User_Settings.u0Name.txt
            }else if(User_Settings.userNum.val==1)
            {
                tUser.txt=" "+User_Settings.u1Name.txt
            }else if(User_Settings.userNum.val==2)
            {
                tUser.txt=" "+User_Settings.u2Name.txt
            }
            //
            vis fLoadModes,0
            vis fLoadColors,0
            //
            tmReturn.tim=Other_Settings.nHoldTime.val
            // Functions shall be invisible
            vis fSqrt,0
            vis fSlider,0
            vis fLoadColors,0
            vis fSysex,0
            // Overview page isn't done
            vis bStereoOverv,0
            // Hide buttons for unavailable tesla coils
            if(TC_Settings.maxCoilCount.val<6)
            {
                vis btCoil6,0
                vis nOn6,0
                vis nDuty6,0
            }
            if(TC_Settings.maxCoilCount.val<5)
            {
                vis btCoil5,0
                vis nOn5,0
                vis nDuty5,0
            }
            if(TC_Settings.maxCoilCount.val<4)
            {
                vis btCoil4,0
                vis nOn4,0
                vis nDuty4,0
            }
            if(TC_Settings.maxCoilCount.val<3)
            {
                vis btCoil3,0
                vis nOn3,0
                vis nDuty3,0
            }
            if(TC_Settings.maxCoilCount.val<2)
            {
                // Single Coil Mode. No need to show a select option.
                vis btCoil2,0
                vis nOn2,0
                vis nDuty2,0
                vis btCoil1,0
                vis nOn1,0
                vis nDuty1,0
                vis tCoil,0
                vis tus1,0
                vis tPerc1,0
                // Make sure that the coil is active.
                btCoil1.val=1
                click btCoil1,0
            }
            // Load button state. Note: At the time of writing I didn't know that Nextion now supports bitwise operations.
            sys0=32
            sys1=TC_Settings.activeCoils.val
            if(sys1>=sys0)
            {
                btCoil6.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil5.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil4.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil3.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil2.val=1
                sys1-=sys0
            }
            sys0/=2
            if(sys1>=sys0)
            {
                btCoil1.val=1
                sys1-=sys0
            }
            // Load user's ontime and duty limit.
            if(User_Settings.userNum.val==2)
            {
                userOnLimit.val=User_Settings.u2Ontime.val
                userDutyLimit.val=User_Settings.u2Duty.val
            }else
            {
                if(User_Settings.userNum.val==1)
                {
                    userOnLimit.val=User_Settings.u1Ontime.val
                    userDutyLimit.val=User_Settings.u1Duty.val
                }else
                {
                    userOnLimit.val=User_Settings.u0Ontime.val
                    userDutyLimit.val=User_Settings.u0Duty.val
                }
            }
            // Load Ontime and Duty from variables. Note: variables take much less space than displayed elements and are therefore better as persistent (= global) variables.
            nOn.val=ontime.val
            nDuty.val=duty.val
            nOn1.val=set1.val&0xffff
            set1.val=set1.val>>16
            nDuty1.val=set1.val&0xffff
            nOn2.val=set2.val&0xffff
            set2.val=set2.val>>16
            nDuty2.val=set2.val&0xffff
            nOn3.val=set3.val&0xffff
            set3.val=set3.val>>16
            nDuty3.val=set3.val&0xffff
            nOn4.val=set4.val&0xffff
            set4.val=set4.val>>16
            nDuty4.val=set4.val&0xffff
            nOn5.val=set5.val&0xffff
            set5.val=set5.val>>16
            nDuty5.val=set5.val&0xffff
            nOn6.val=set6.val&0xffff
            set6.val=set6.val>>16
            nDuty6.val=set6.val&0xffff
            // Restore slider positions
            fSliderInput.val=sDuty.maxval
            fSliderOutput.val=userDutyLimit.val
            fSlider.val=nDuty.val
            click fSlider,0
            sDuty.val=fSlider.val
            fSliderInput.val=sOn.maxval
            fSliderOutput.val=userOnLimit.val
            fSlider.val=nOn.val
            click fSlider,0
            sOn.val=fSlider.val
            sOnOld.val=sOn.val
            sDutyOld.val=sDuty.val
            //
            // View current mode of applying
            vis bMode,0
            vis bApply,0
            Settings.applyingMode.val--
            click bMode,0
            //
            // Make sure the microcontroller is up-to-date
            click bApply,0
            //
            // Help mode is disabled by default
            vis hHelp,0
            vis tHelp,0
            //
            // Enable MIDI Live Mode (see fSysex)
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 20 00 // Mode Enable
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 02 // MIDI Live Mode
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // 1: Enable
            printh 01 00 00 00 00
            // SYSEX_END
            printh f7
            //
            // Enable page refreshs again
            ref_star
        
        Postinitialize Event
            click fDraw,1
            //
            vis bMode,1
            //
            // Check if any channels are enabled, If not, blink the corresponding button to make the user aware.
            sys0=TC_Settings.coil1Chn.val|TC_Settings.coil2Chn.val|TC_Settings.coil3Chn.val|TC_Settings.coil4Chn.val|TC_Settings.coil5Chn.val|TC_Settings.coil6Chn.val
            sys0&=0xffff
            if(sys0==0)
            {
                tmBlink.en=1
            }
        
        Touch Press Event
            if(Other_Settings.nBackOff.val!=0)
            {
                // Default "stop" action.
                // Set ontime and duty to 0 for all modes. See fSysex for details
                // Disable all modes as well.
                printh f0 00 26 06 01 7f 20 00 00 7f 00 00 00 00 00 f7
                printh f0 00 26 05 01 7f 21 00 00 7f 00 00 00 00 00 f7
                printh f0 00 26 05 01 7f 22 00 00 7f 00 00 00 00 00 f7
                // Set all ontime and duty settings of all pages to 0.
                // First come the global variables then the local variables.
                Simple.ontime.val=0
                Simple.duty.val=0
                Simple.set1.val=Simple.set1.val&0x0000ffff
                Simple.set2.val=Simple.set2.val&0x0000ffff
                Simple.set3.val=Simple.set3.val&0x0000ffff
                Simple.set4.val=Simple.set4.val&0x0000ffff
                Simple.set5.val=Simple.set5.val&0x0000ffff
                Simple.set6.val=Simple.set6.val&0x0000ffff
                MIDI_Live.ontime.val=0
                MIDI_Live.duty.val=0
                MIDI_Live.set1.val=0
                MIDI_Live.set2.val=0
                MIDI_Live.set3.val=0
                MIDI_Live.set4.val=0
                MIDI_Live.set5.val=0
                MIDI_Live.set6.val=0
                Lightsaber.ontime.val=0
                Lightsaber.ontimes12.val=0
                Lightsaber.ontimes34.val=0
                Lightsaber.ontimes56.val=0
                nOn.val=0
                sOn.val=0
                nOn1.val=0
                nOn2.val=0
                nOn3.val=0
                nOn4.val=0
                nOn5.val=0
                nOn6.val=0
                nDuty.val=0
                sDuty.val=0
                nDuty1.val=0
                nDuty2.val=0
                nDuty3.val=0
                nDuty4.val=0
                nDuty5.val=0
                nDuty6.val=0
            }
        
        Page Exit Event
            // Store Ontime and Duty in global variables. Note: variables take much less space than displayed elements and are therefore better as persistent (= global) variables.
            ontime.val=nOn.val
            duty.val=nDuty.val
            set1.val=nDuty1.val<<16
            set1.val+=nOn1.val
            set2.val=nDuty2.val<<16
            set2.val+=nOn2.val
            set3.val=nDuty3.val<<16
            set3.val+=nOn3.val
            set4.val=nDuty4.val<<16
            set4.val+=nOn4.val
            set5.val=nDuty5.val<<16
            set5.val+=nOn5.val
            set6.val=nDuty6.val<<16
            set6.val+=nOn6.val
        
Variable (string) sCoil
    Attributes
        ID            : 20
        Scope         : local
        Text          : 0
        Max. Text Size: 3
    
Variable (int32) newData
    Attributes
        ID   : 21
        Scope: local
        Value: 0
    
Variable (int32) ontime
    Attributes
        ID   : 22
        Scope: global
        Value: 0
    
Variable (int32) duty
    Attributes
        ID   : 23
        Scope: global
        Value: 0
    
Variable (int32) openEE
    Attributes
        ID   : 25
        Scope: local
        Value: 0
    
Variable (int32) set1
    Attributes
        ID   : 26
        Scope: global
        Value: 0
    
Variable (int32) set2
    Attributes
        ID   : 27
        Scope: global
        Value: 0
    
Variable (int32) set3
    Attributes
        ID   : 28
        Scope: global
        Value: 0
    
Variable (int32) set4
    Attributes
        ID   : 29
        Scope: global
        Value: 0
    
Variable (int32) set5
    Attributes
        ID   : 30
        Scope: global
        Value: 0
    
Variable (int32) set6
    Attributes
        ID   : 31
        Scope: global
        Value: 0
    
Variable (int32) fSliderInput
    Attributes
        ID   : 33
        Scope: local
        Value: 0
    
Variable (int32) fSliderOutput
    Attributes
        ID   : 34
        Scope: local
        Value: 0
    
Variable (int32) userOnLimit
    Attributes
        ID   : 35
        Scope: local
        Value: 0
    
Variable (int32) userDutyLimit
    Attributes
        ID   : 36
        Scope: local
        Value: 0
    
Variable (int32) currentHelp
    Attributes
        ID   : 56
        Scope: local
        Value: 4294967295
    
Variable (int32) sOnOld
    Attributes
        ID   : 58
        Scope: local
        Value: 0
    
Variable (int32) sDutyOld
    Attributes
        ID   : 59
        Scope: local
        Value: 0
    
Number nOn
    Attributes
        ID                 : 7
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 9999
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number fSlider
    Attributes
        ID                 : 32
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // fXxxx are functions. Since they need to be clicked to execute their code they need to be on the same page. Usage:
            // 1. set the component value (fXxx.val) to the input value
            // 2. Execute code with "click fXxxx,1".
            // 3. Read the result from the component value (fXxx.val)
            //
            // Touch Press: g = o * f(x / i) with f(x) = (x^2 + x) / 2, i: input range, o: output range. => g = (x^2 + i * x) * o / (2 * i^2)
            // Touch Release: g^-1 = ( sqrt( ( x * 8 + o ) * o ) - o ) * i / ( 2 * o )
            //
            sys0=fSlider.val
            fSlider.val=sys0*sys0
            sys0*=fSliderInput.val
            fSlider.val+=sys0
            fSlider.val*=fSliderOutput.val
            sys0=2*fSliderInput.val*fSliderInput.val
            fSlider.val/=sys0
        
        Touch Release Event
            // fXxxx are functions. Since they need to be clicked to execute their code they need to be on the same page. Usage:
            // 1. set the component value (fXxx.val) to the input value
            // 2. Execute code with "click fXxxx,1".
            // 3. Read the result from the component value (fXxx.val)
            //
            // Touch Press: g = o * f(x / i) with f(x) = (x^2 + x) / 2, i: input range, o: output range. => g = (x^2 + i * x) * o / (2 * i^2)
            // Touch Release: g^-1 = ( sqrt( ( x * 8 + o ) * o ) - o ) * i / ( 2 * o )
            //
            fSqrt.val=fSlider.val*8
            fSqrt.val+=fSliderOutput.val
            fSqrt.val*=fSliderOutput.val
            click fSqrt,1
            fSqrt.val-=fSliderOutput.val
            fSqrt.val*=fSliderInput.val
            sys0=2*fSliderOutput.val
            fSlider.val=fSqrt.val/sys0
        
Number fSqrt
    Attributes
        ID                 : 37
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // fXxxx are functions. Since they need to be clicked to execute their code they need to be on the same page. Usage:
            // 1. set the component value (fXxx.val) to the input value
            // 2. Execute code with "click fXxxx,1".
            // 3. Read the result from the component value (fXxx.val)
            // This functions calculates the square root. Source: https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Binary_numeral_system_(base_2)
            sys0=0
            sys1=1
            while(sys1<=fSqrt.val)
            {
                sys1=sys1<<2
            }
            sys1=sys1>>2
            while(sys1!=0)
            {
                sys2=sys0+sys1
                if(fSqrt.val>=sys2)
                {
                    fSqrt.val-=sys2
                    sys0=sys0>>1
                    sys0+=sys1
                }else
                {
                    sys0=sys0>>1
                }
                sys1=sys1>>2
            }
            fSqrt.val=sys0
        
Number nOn1
    Attributes
        ID                 : 44
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn2
    Attributes
        ID                 : 45
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn3
    Attributes
        ID                 : 46
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn4
    Attributes
        ID                 : 47
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn5
    Attributes
        ID                 : 48
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Number nOn6
    Attributes
        ID                 : 49
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty
    Attributes
        ID                 : 10
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty1
    Attributes
        ID                 : 50
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty2
    Attributes
        ID                 : 51
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty3
    Attributes
        ID                 : 52
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty4
    Attributes
        ID                 : 53
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty5
    Attributes
        ID                 : 54
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
XFloat nDuty6
    Attributes
        ID                 : 55
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Value              : 0
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHelp
    Attributes
        ID                 : 1
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : 
        Max. Text Size     : 650
    
    Events
        Touch Press Event
            // This shouldn't be clickable but just in case it is...
            click 0,1
        
Text tTitle
    Attributes
        ID                 : 2
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Live Mode
        Max. Text Size     : 22
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHideBack1
    Attributes
        ID                 : 3
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // This is just to hide the background around the sliders so that you do not turn the outputs off by accident.
        
Text tCoil
    Attributes
        ID                 : 4
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Apply to:
        Max. Text Size     : 20
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tHideBack
    Attributes
        ID                 : 5
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // This is just to hide the background around the sliders so that you do not turn the outputs off by accident.
        
Text tDuty
    Attributes
        ID                 : 9
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Note Duty:
        Max. Text Size     : 20
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tPerc
    Attributes
        ID                 : 11
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : %
        Max. Text Size     : 1
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tus
    Attributes
        ID                 : 13
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Âµs
        Max. Text Size     : 3
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tOn
    Attributes
        ID                 : 38
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Note Ontime:
        Max. Text Size     : 20
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tUser
    Attributes
        ID                 : 40
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               :  Guest
        Max. Text Size     : 32
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMSI
    Attributes
        ID                 : 41
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Simple
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMML
    Attributes
        ID                 : 42
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : MIDI Live
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tMLS
    Attributes
        ID                 : 43
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : Lightsaber
        Max. Text Size     : 16
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tus1
    Attributes
        ID                 : 61
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : µs
        Max. Text Size     : 2
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Text tPerc1
    Attributes
        ID                 : 62
        Scope              : local
        Send Component ID  : disabled
        Associated Keyboard: none
        Text               : %
        Max. Text Size     : 2
    
    Events
        Touch Press Event
            // Make this object "transparent" for clicks and click background.
            click 0,1
        
Slider sOn
    Attributes
        ID               : 6
        Scope            : local
        Send Component ID: disabled
        Position         : 0
        Upper range limit: 366
        Lower range limit: 0
    
    Events
        Touch Press Event
            // Slider minval = 0
            // Slider maxval = SliderWidth - CursorWIdth - 1
            // => Slider resolution equals slider "pixel" resolution
            fSliderInput.val=sOn.maxval
            fSliderOutput.val=userOnLimit.val
        
        Touch Release Event
            fSlider.val=sOn.val
            click fSlider,1
            // Reduce resolution according to slider range for more "consistent" steps.
            sys0=1
            if(fSlider.val>=10000)
            {
                sys0=1000
            }else if(fSlider.val>=5000)
            {
                sys0=500
            }else if(fSlider.val>=1000)
            {
                sys0=100
            }else if(fSlider.val>=500)
            {
                sys0=50
            }else if(fSlider.val>=100)
            {
                sys0=10
            }else if(fSlider.val>=50)
            {
                sys0=5
            }
            fSlider.val/=sys0
            fSlider.val*=sys0
            if(nOn.val!=fSlider.val)
            {
                newData.val=1
                nOn.val=fSlider.val
            }
            // to understand the following lines have a look at the Touch Move code.
            // what you would actually wanna do is put the code above in touch move and perform a click event on touch move here (because your can press/release a slider, changing its value without moving it).
            // However "click" can only execute press/release events, so it gets more complicated...
            if(Settings.applyingMode.val>=1)
            {
                click bApply,0
            }
            // Store slider position in case of a "help touch"
            sOnOld.val=sOn.val
        
Slider sDuty
    Attributes
        ID               : 8
        Scope            : local
        Send Component ID: disabled
        Position         : 0
        Upper range limit: 366
        Lower range limit: 0
    
    Events
        Touch Press Event
            fSliderInput.val=sDuty.maxval
            fSliderOutput.val=userDutyLimit.val
        
        Touch Release Event
            fSlider.val=sDuty.val
            click fSlider,1
            if(nDuty.val!=fSlider.val)
            {
                newData.val=1
                nDuty.val=fSlider.val
            }
            // to understand the following lines have a look at the Touch Move code.
            // what you would actually wanna do is put the code above in touch move and perform a click event on touch move here (because your can press/release a slider, changing its value without moving it).
            // However "click" can only execute press/release events, so it gets more complicated...
            if(Settings.applyingMode.val>=1)
            {
                click bApply,0
            }
            // Store slider position in case of a "help touch"
            sDutyOld.val=sDuty.val
        
Button bApply
    Attributes
        ID               : 12
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Apply now
        Max. Text Size   : 15
    
    Events
        Touch Press Event
            tmEE.en=1
        
        Touch Release Event
            if(newData.val!=0&&TC_Settings.activeCoils.val!=0)
            {
                if(btCoil1.val==1)
                {
                    nOn1.val=nOn.val
                    nDuty1.val=nDuty.val
                    sys0=0
                    click fSysex,1
                }
                if(btCoil2.val==1)
                {
                    nOn2.val=nOn.val
                    nDuty2.val=nDuty.val
                    sys0=1
                    click fSysex,1
                }
                if(btCoil3.val==1)
                {
                    nOn3.val=nOn.val
                    nDuty3.val=nDuty.val
                    sys0=2
                    click fSysex,1
                }
                if(btCoil4.val==1)
                {
                    nOn4.val=nOn.val
                    nDuty4.val=nDuty.val
                    sys0=3
                    click fSysex,1
                }
                if(btCoil5.val==1)
                {
                    nOn5.val=nOn.val
                    nDuty5.val=nDuty.val
                    sys0=4
                    click fSysex,1
                }
                if(btCoil6.val==1)
                {
                    nOn6.val=nOn.val
                    nDuty6.val=nDuty.val
                    sys0=5
                    click fSysex,1
                }
                newData.val=0
            }
            //
            tmEE.en=0
            if(openEE.val!=0)
            {
                openEE.val=0
                // Important date! (DDMMYYYY)
                sys0=11102161
                click fSysex,1
            }
        
Button bMode
    Attributes
        ID               : 57
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Manually
        Max. Text Size   : 15
    
    Events
        Touch Release Event
            Settings.applyingMode.val++
            if(Settings.applyingMode.val==2)
            {
                bMode.txt="Immediately"
                vis bApply,0
            }else if(Settings.applyingMode.val==1)
            {
                bMode.txt="On Release"
                vis bApply,0
            }else // higher than allowed, jump back to 0
            {
                Settings.applyingMode.val=0
                bMode.txt="Manually"
                vis bApply,1
            }
        
Button bReturn
    Attributes
        ID               : 63
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : â†
        Max. Text Size   : 3
    
    Events
        Touch Press Event
            // If button is hold, return without "exiting" MIDI Live mode (keep it running in background.
            tmReturn.en=1
        
        Touch Release Event
            tmReturn.en=0
            // Leaving MIDI Live Mode. Mode is now inactive
            Settings.activeModes.val=Settings.activeModes.val^2
            //
            // Disable MIDI Live Mode  (see fSysex)
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 20 00 // Mode Enable
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 02 // MIDI Live Mode
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // 0: Disable
            printh 00 00 00 00 00
            // SYSEX_END
            printh f7
            //
            page Menu
        
Button bNRPReset
    Attributes
        ID               : 65
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : NRP Reset
        Max. Text Size   : 10
    
    Events
        Touch Release Event
            // Sends a Syntherrupter Sysex command that resets all NRPs for all channels
            // Package format:
            // F0 00 DMID DMID VERSION DEVICE PN_LSB PN_MSB TG_LSB TG_MSB VAL_LSB VAL VAL VAL VAL_MSB F7
            // DMID DMID = 26 05
            // VERSION = 01
            // DEVICE = 7f (wildcard)
            // PN, TG, VAL: see syntherrupter sysex documentation
            //
            // SYSEX_START DMID VERSION DEVICE
            printh f0 00 26 05 01 7f
            // PN_LSB PN_MSB
            printh 66 00 // Mode Enable
            // TG_LSB
            printh 00 // Reserved
            // TG_MSB
            printh 00 // Reserved
            // VAL (4 bytes to be packed into 5 groups of 7 bit)
            // 0xffff: all 16 channels
            printh 7f 7f 03 00 00
            // SYSEX_END
            printh f7
        
Button bChnAssign
    Attributes
        ID               : 66
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Chn. Assign.
        Max. Text Size   : 20
    
    Events
        Touch Release Event
            page MIDI_Chn_Assgn
        
Button bChnStereo
    Attributes
        ID               : 67
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Chn. Stereo
        Max. Text Size   : 26
    
    Events
        Touch Release Event
            Stereo_Chns.origin.val=dp
            page Stereo_Chns
        
Button bCoilStereo
    Attributes
        ID               : 68
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Coil Stereo
        Max. Text Size   : 26
    
    Events
        Touch Release Event
            Stereo_Coils.origin.val=dp
            page Stereo_Coils
        
Button bStereoOverv
    Attributes
        ID               : 69
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Stereo Overview
        Max. Text Size   : 20
    
    Events
        Touch Release Event
            page Stereo_Overv
        
Button bEnvelope
    Attributes
        ID               : 70
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : Envelopes
        Max. Text Size   : 20
    
    Events
        Touch Release Event
            Env_Settings.origin.val=dp
            page Env_Settings
        
Dual-state Button btCoil1
    Attributes
        ID               : 14
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 1
        Max. Text Size   : 3
    
    Events
        Touch Press Event
            sCoil.txt='&txt&'
        
        Touch Release Event
            // A coil might have been enabled, and thus does not have the currently displayed values.
            newData.val=1
            //  Bit 0-5 correspond to the state of the buttons btCoil1-btCoil6
            sys0=btCoil1.val
            sys0=btCoil2.val*2+sys0
            sys0=btCoil3.val*4+sys0
            sys0=btCoil4.val*8+sys0
            sys0=btCoil5.val*16+sys0
            sys0=btCoil6.val*32+sys0
            // Store settings
            TC_Settings.activeCoils.val=sys0
        
Dual-state Button btCoil2
    Attributes
        ID               : 15
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 2
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            sCoil.txt='&txt&'
        
        Touch Release Event
            click btCoil1,0
        
Dual-state Button btCoil3
    Attributes
        ID               : 16
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 3
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            sCoil.txt='&txt&'
        
        Touch Release Event
            click btCoil1,0
        
Dual-state Button btCoil4
    Attributes
        ID               : 17
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 4
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            sCoil.txt='&txt&'
        
        Touch Release Event
            click btCoil1,0
        
Dual-state Button btCoil5
    Attributes
        ID               : 18
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 5
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            sCoil.txt='&txt&'
        
        Touch Release Event
            click btCoil1,0
        
Dual-state Button btCoil6
    Attributes
        ID               : 19
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : 6
        Max. Text Size   : 4
    
    Events
        Touch Press Event
            sCoil.txt='&txt&'
        
        Touch Release Event
            click btCoil1,0
        
Dual-state Button btHelp
    Attributes
        ID               : 71
        Scope            : local
        Send Component ID: disabled
        State            : unpressed
        Text             : ?
        Max. Text Size   : 1
    
    Events
        Touch Release Event
            if(btHelp.val==0)
            {
                vis hHelp,0
                click fDraw,1
            }else
            {
                vis hHelp,1
            }
        
Hotspot fLoadModes
    Attributes
        ID               : 60
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Load active modes
            sys0=Settings.activeModes.val&4
            if(sys0!=0)
            {
                // Lightsaber Mode is active
                tMLS.bco=Settings.backSelectCol2.val
            }
            //
            // Display all active modes
            sys0=Settings.activeModes.val&1
            if(sys0!=0)
            {
                // Simple Mode is active
                tMSI.bco=Settings.backSelectCol2.val
            }
            sys0=Settings.activeModes.val&2
            if(sys0!=0)
            {
                // MIDI Live Mode is active
                tMML.bco=Settings.backSelectCol2.val
            }
        
Hotspot fSysex
    Attributes
        ID               : 72
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Sends a Syntherrupter Sysex command that updates Syntherrupter with whatever
            // has been changed on this page.
            // Package format:
            // F0 00 DMID DMID VERSION DEVICE PN_LSB PN_MSB TG_LSB TG_MSB VAL_LSB VAL VAL VAL VAL_MSB F7
            // DMID DMID = 26 05
            // VERSION = 01
            // DEVICE = 7f (wildcard)
            // PN, TG, VAL: see syntherrupter sysex documentation
            //
            // To send: Mode Enable, Ontime/duty, BPS.
            //
            //
            if(sys0==11102161)
            {
                // Important date! Time to celebrate!
                // SYSEX_START DMID VERSION DEVICE
                printh f0 00 26 05 01 7f
                // PN_LSB PN_MSB
                printh 7f 00 // Celebrate
                // TG_LSB
                printh 00 // Reserved
                // TG_MSB
                printh 00 // Reserved
                // VAL (4 bytes to be packed into 5 groups of 7 bit)
                sys1=sys0
                sys2=sys1
                sys2&=0x7f
                prints sys2,1
                sys1>>=7
                sys2=sys1&0x7f
                prints sys2,1
                sys1>>=7
                sys2=sys1&0x7f
                prints sys2,1
                sys1>>=7
                sys2=sys1&0x7f
                prints sys2,1
                sys1>>=7
                sys2=sys1&0x7f
                prints sys2,1
                // SYSEX_END
                printh f7
            }else
            {
                // For the given coil sys0...  (see fApply)
                // If coil is selected...
                sys1=btCoil1.id+sys0
                if(b[sys1].val>0)
                {
                    // Ontime
                    // SYSEX_START DMID VERSION DEVICE
                    printh f0 00 26 05 01 7f
                    // PN_LSB PN_MSB
                    printh 21 00 // Ontime
                    // TG_LSB
                    prints sys0,1// Coil
                    // TG_MSB
                    printh 02 // MIDI Live Mode
                    // VAL (4 bytes to be packed into 5 groups of 7 bit)
                    // Ontime in us
                    // Use ontime.val as temp variable (its only relevant on page exit and page load
                    ontime.val=nOn.val
                    sys2=ontime.val
                    sys2&=0x7f
                    prints sys2,1
                    ontime.val>>=7
                    sys2=ontime.val
                    sys2&=0x7f
                    prints sys2,1
                    ontime.val>>=7
                    sys2=ontime.val
                    sys2&=0x7f
                    prints sys2,1
                    ontime.val>>=7
                    sys2=ontime.val
                    sys2&=0x7f
                    prints sys2,1
                    ontime.val>>=7
                    sys2=ontime.val
                    sys2&=0x7f
                    prints sys2,1
                    // SYSEX_END
                    printh f7
                    // Duty
                    // SYSEX_START DMID VERSION DEVICE
                    printh f0 00 26 05 01 7f
                    // PN_LSB PN_MSB
                    printh 22 00 // Duty
                    // TG_LSB
                    prints sys0,1// Coil
                    // TG_MSB
                    printh 02 // MIDI Live Mode
                    // VAL (4 bytes to be packed into 5 groups of 7 bit)
                    // Duty cycle in 0.1%
                    sys1=nDuty.val
                    sys2=sys1
                    sys2&=0x7f
                    prints sys2,1
                    sys1>>=7
                    sys2=sys1&0x7f
                    prints sys2,1
                    sys1>>=7
                    sys2=sys1&0x7f
                    prints sys2,1
                    sys1>>=7
                    sys2=sys1&0x7f
                    prints sys2,1
                    sys1>>=7
                    sys2=sys1&0x7f
                    prints sys2,1
                    // SYSEX_END
                    printh f7
                }
            }
        
Hotspot fDraw
    Attributes
        ID               : 73
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Draw grid lines
            // sys0: start, sys1: end, sys2: vertical position
            if(TC_Settings.maxCoilCount.val>=2)
            {
                sys0=tus1.x
                if(TC_Settings.maxCoilCount.val>=6)
                {
                    sys1=nOn6.x+nOn6.w
                }else if(TC_Settings.maxCoilCount.val>=5)
                {
                    sys1=nOn5.x+nOn5.w
                }else if(TC_Settings.maxCoilCount.val>=4)
                {
                    sys1=nOn4.x+nOn4.w
                }else if(TC_Settings.maxCoilCount.val>=3)
                {
                    sys1=nOn3.x+nOn3.w
                }else // if(TC_Settings.maxCoilCount.val>=2)
                {
                    sys1=nOn2.x+nOn2.w
                }
                sys2=tus1.y+tus1.h
                line sys0,sys2,sys1,sys2,tus1.pco
            }
            //
            // Line above related settings
            sys0=bChnAssign.x
            sys1=bApply.x+bApply.w-1
            sys2=bChnAssign.y+bApply.y+bApply.h
            sys2/=2
            line sys0,sys2,sys1,sys2,tTitle.pco
        
Hotspot fLoadColors
    Attributes
        ID               : 74
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Changes all page components according to the current color set.
            // Note: This component has to be the last component of the page.
            //
            // sys0: component id
            // sys1: component type
            // sys2: picture id offset for current color mode
            sys2=Settings.colorMode.val*Settings.picCount.val
            for(sys0=0;sys0<fLoadColors.id;sys0++)
            {
                // More convenient for typing
                sys1=b[sys0].type
                if(sys1==121)
                {
                    // Types that have bco
                    // page
                    if(b[sys0].bco==Settings.backCol2Deflt.val)
                    {
                        b[sys0].bco=Settings.backCol2.val
                    }else
                    {
                        b[sys0].bco=Settings.backCol.val
                    }
                }else if(sys1==54||sys1==59||sys1==116||sys1==55)
                {
                    // Types that have bco, pco, and sta:
                    // number, float, text, scroll text
                    if(b[sys0].sta==1)
                    {
                        if(b[sys0].bco==Settings.backCol2Deflt.val)
                        {
                            b[sys0].bco=Settings.backCol2.val
                            b[sys0].pco=Settings.frontCol2.val
                        }else
                        {
                            b[sys0].bco=Settings.backCol.val
                            b[sys0].pco=Settings.frontCol.val
                        }
                    }
                }else if(sys1==98||sys1==53)
                {
                    // Types that have pco, pic, pco2, pic2, sta:
                    // button, dual-state button
                    if(b[sys0].sta==2)
                    {
                        b[sys0].pco=Settings.frontCol.val
                        b[sys0].pco2=Settings.backCol.val
                        b[sys0].pic=b[sys0].pic%Settings.picCount.val
                        b[sys0].pic+=sys2
                        b[sys0].pic2=b[sys0].pic+1
                    }
                }else if(sys1==58)
                {
                    // Types that have bco, pco
                    // QR Code
                    b[sys0].bco=Settings.backCol.val
                    b[sys0].pco=Settings.qrFrontCol.val
                }else if(sys1==1)
                {
                    // Types that have pic, pic1, pic2:
                    // slider
                    b[sys0].pic=b[sys0].pic%Settings.picCount.val
                    b[sys0].pic+=sys2
                    b[sys0].pic1=b[sys0].pic
                    b[sys0].pic2=b[sys0].pic2%Settings.picCount.val
                    b[sys0].pic2+=sys2
                }
            }
        
Hotspot hHelp
    Attributes
        ID               : 75
        Scope            : local
        Send Component ID: disabled
    
    Events
        Touch Press Event
            // Determine component/feature that would have been touched.
            sys1=0
            for(sys0=fLoadColors.id;sys0>=0;sys0--)
            {
                // Ignore hotspots, touchcaps, variables
                if(b[sys0].type!=5&&b[sys0].type!=51&&b[sys0].type!=52&&b[sys0].type!=109)
                {
                    x0=b[sys0].x
                    y0=b[sys0].y
                    x1=b[sys0].w
                    y1=b[sys0].h
                    x1+=x0
                    y1+=y0
                    if(tch0>=x0&&tch0<x1&&tch1>=y0&&tch1<y1)
                    {
                        sys1=sys0
                        // abort loop
                        sys0=-1
                    }
                }
            }
            if(currentHelp.val>=0&&sys1==bReturn.id)
            {
                // Return button has been pressed while help is being displayed. This means
                // hide the help text again (see touch release event)
                bReturn.val=1
            }else if(sys1==btHelp.id)
            {
                // Question mark button has been pressed. Disable help mode (see touch release event).
                btHelp.val=0
            }else if(currentHelp.val>=0)
            {
                // Help is being displayed and something else has been pressed.
                // Act as if the page background had been pressed.
                // Note: this can make other UI elements to "pop up", therefore bring the text back on top
                // TODO: Prevent flickering!
                click 0,1
                doevents
                ref tHelp
            }else
            {
                // Show help according to what has been touched.
                // Assume that some new help will be displayed
                sys0=1
                tHelp.txt=""
                if(Settings.firstHelp.val!=0)
                {
                    Settings.firstHelp.val=0
                    tHelp.txt+="Help Mode Enabled \r\r"
                    tHelp.txt+="You've enabled the on-screen help by pressing the question mark at the top right \r"
                    tHelp.txt+="corner. As long as it's active, you can press any part of the UI and get a description \r"
                    tHelp.txt+="of what that button/slider/... does. \r"
                    tHelp.txt+="Press the X button at the top left to get help on another part of the UI. \r"
                    tHelp.txt+="Press the question mark at the top right to leave help mode and resume normal\r"
                    tHelp.txt+="operation. \r"
                    tHelp.txt+="Press any other part of the screen, including this description, to disable all outputs. \r"
                    tHelp.txt+="For more information, check the help on the page background.\r"
                    tHelp.txt+=" \r"
                    tHelp.txt+="This tip won't reappear until you reset or power cycle Syntherrupter. \r"
                }else if(sys1==tTitle.id)
                {
                    tHelp.txt+="MIDI Live Mode \r\r"
                    tHelp.txt+="In MIDI Live Mode Syntherrupter listens on its serial ports for MIDI music and plays it.\r"
                }else if(sys1==tUser.id)
                {
                    tHelp.txt+="Current User \r\r"
                    tHelp.txt+="The name of the currently active user. This determines the range within which you \r"
                    tHelp.txt+="can operate Syntherrupter. Go to the main menu to change the current user. \r"
                }else if(sys1==tMSI.id||sys1==tMML.id||sys1==tMLS.id)
                {
                    tHelp.txt+="Active Modes \r\r"
                    tHelp.txt+="Modes can stay active even if you leave the corresponding page. Active modes are \r"
                    tHelp.txt+="highlighted at the bottom right.  \r"
                }else if(sys1==0||sys1==tHelp.id)
                {
                    tHelp.txt+="Page background \r\r"
                    tHelp.txt+="The page background, textboxes and non-interactive elements in general shut down \r"
                    tHelp.txt+="all outputs if you press them. This allows you to quickly stop all outputs and all \r"
                    tHelp.txt+="modes if something goes wrong. \r"
                    tHelp.txt+="Note however, that unplugging is the only actually safe way to ensure a complete \r"
                    tHelp.txt+="shutdown! \r"
                    tHelp.txt+="This feature can be temporarily disabled in the general settings. After a reset or \r"
                    tHelp.txt+="power-cycle it will be enabled again.\r"
                }else if(sys1==bReturn.id)
                {
                    tHelp.txt+="Return Button\r\r"
                    tHelp.txt+="The dual outline indicates that the button has an alternate function if you keep it pressed. \r"
                    tHelp.txt+="Nomal press: Stop MIDI Live Mode and return to the menu.\r"
                    tHelp.txt+="Long press: Keep MIDI Live Mode running and return to the menu. "
                }else if(sys1==tOn.id||sys1==nOn.id||sys1==tus.id||sys1==sOn.id)
                {
                    tHelp.txt+="Note Ontime\r\r"
                    tHelp.txt+="Ontime of a single note at full volume. If you also specify a note duty cycle, \r"
                    tHelp.txt+="Syntherrupter uses whichever results in the highest ontime. Effectively, this means \r"
                    tHelp.txt+="that low notes play at constant duty, high notes at constant ontime.\r"
                    tHelp.txt+="\r"
                    tHelp.txt+="Note that envelopes can specify volume levels >100%, causing higher ontimes than \r"
                    tHelp.txt+="what you specify here - within the coil limit settings."
                }else if(sys1==tDuty.id||sys1==nDuty.id||sys1==tPerc.id||sys1==sDuty.id)
                {
                    tHelp.txt+="Note Duty\r\r"
                    tHelp.txt+="Duty cycle of a single note at full volume. If you also specify a note ontime, \r"
                    tHelp.txt+="Syntherrupter uses whichever results in the highest ontime. Effectively, this means \r"
                    tHelp.txt+="that low notes play at constant duty, high notes at constant ontime.\r"
                    tHelp.txt+="\r"
                    tHelp.txt+="Note that envelopes can specify volume levels >100%, causing higher ontimes than \r"
                    tHelp.txt+="what you specify here - within the coil limit settings."
                }else if(sys1==tCoil.id||sys1==btCoil1.id||sys1==btCoil2.id||sys1==btCoil3.id||sys1==btCoil4.id||sys1==btCoil5.id||sys1==btCoil6.id||sys1==nOn1.id||sys1==nOn2.id||sys1==nOn3.id||sys1==nOn4.id||sys1==nOn5.id||sys1==nOn6.id||sys1==nDuty1.id||sys1==nDuty2.id||sys1==nDuty3.id||sys1==nDuty4.id||sys1==nDuty5.id||sys1==nDuty6.id||sys1==tus1.id||sys1==tPerc1.id)
                {
                    tHelp.txt+="Output Selection\r\r"
                    tHelp.txt+="Select which outputs are affected by the note ontime and note duty changes. \r"
                    tHelp.txt+="To help you keeping the overview, the currently active settings are displayed \r"
                    tHelp.txt+="below each coil. \r"
                }else if(sys1==bMode.id||sys1==bApply.id)
                {
                    tHelp.txt+="Applying New Settings\r\r"
                    tHelp.txt+="The changes you make to the note ontime and duty are by default applied as soon \r"
                    tHelp.txt+="as you release the sliders. Alternatively, the changes are applied immediately while \r"
                    tHelp.txt+="moving the sliders. The third option allows you to manually apply the settings. \r"
                }else if(sys1==bChnAssign.id)
                {
                    tHelp.txt+="MIDI Channel Assignments\r\r"
                    tHelp.txt+="Select to which channels each coil listens. If no coils listens to any channels, \r"
                    tHelp.txt+="this button blinks. \r"
                }else if(sys1==bNRPReset.id)
                {
                    tHelp.txt+="NRP Reset\r\r"
                    tHelp.txt+="Resets all of Syntherrupters non-registered parameters (NRPs). These are f.ex. used \r"
                    tHelp.txt+="to stereo map MIDI channels. \r"
                }else if(sys1==bChnStereo.id)
                {
                    tHelp.txt+="Channel Stereo Settings\r\r"
                    tHelp.txt+="Configure where on the stereo range each channel plays. Normally, each channel \r"
                    tHelp.txt+="plays at the stereo position determined by the MIDI 'pan' command. However, you \r"
                    tHelp.txt+="can also map each note based on its pitch or make it play 'everywhere'. \r"
                }else if(sys1==bCoilStereo.id)
                {
                    tHelp.txt+="Coil Stereo Settings \r\r"
                    tHelp.txt+="Configure where on the stereo range each coil is placed. You can also configure how \r"
                    tHelp.txt+="close a note needs to be to play on this coil.\r"
                    tHelp.txt+="Note that all notes from channels that are not assigned to a given coil won't play on \r"
                    tHelp.txt+="that coil. See Channel Assignments. \r"
                }else if(sys1==bEnvelope.id)
                {
                    tHelp.txt+="Envelope Settings \r\r"
                    tHelp.txt+="Envelopes can significantly improve the sound of your tesla coils. I'd suggest you \r"
                    tHelp.txt+="try it by setting the instrument of your MIDI track(s) to  '10: Glockenspiel'. \r"
                    tHelp.txt+="If you want to modify the characteristics of the envelope you can do it here in the \r"
                    tHelp.txt+="envelope editor. You should check the documentation first though.  \r"
                }else
                {
                    // Nope, no new help text to be displayed
                    sys0=0
                }
                if(sys0!=0)
                {
                    currentHelp.val=sys1
                    vis tHelp,1
                    bReturn.txt="âœ•"
                }
            }
        
        Touch Release Event
            // Check if help text is being displayed and shall be hidden again
            if(bReturn.val==1)
            {
                bReturn.val=0
                bReturn.txt="â†"
                vis tHelp,0
                click fDraw,1
                currentHelp.val=-1
            }else if(sys1==btHelp.id)
            {
                click btHelp,0
            }
        
Timer tmEE
    Attributes
        ID         : 24
        Scope      : local
        Period (ms): 6000
        Enabled    : no
    
    Events
        Timer Event
            openEE.val=1
        
Timer tmReturn
    Attributes
        ID         : 39
        Scope      : local
        Period (ms): 250
        Enabled    : no
    
    Events
        Timer Event
            tmReturn.en=0
            // Leave page but keep MIDI Live Mode active in background.
            page Menu
        
Timer tmBlink
    Attributes
        ID         : 64
        Scope      : local
        Period (ms): 500
        Enabled    : no
    
    Events
        Timer Event
            bChnAssign.val=1-bChnAssign.val
        
